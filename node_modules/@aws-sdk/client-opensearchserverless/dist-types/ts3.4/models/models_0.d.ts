import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { DocumentType as __DocumentType } from "@smithy/types";
import { OpenSearchServerlessServiceException as __BaseException } from "./OpenSearchServerlessServiceException";
export declare const AccessPolicyType: {
  readonly data: "data";
};
export type AccessPolicyType =
  (typeof AccessPolicyType)[keyof typeof AccessPolicyType];
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface CreateAccessPolicyRequest {
  type: AccessPolicyType | undefined;
  name: string | undefined;
  description?: string;
  policy: string | undefined;
  clientToken?: string;
}
export interface AccessPolicyDetail {
  type?: AccessPolicyType;
  name?: string;
  policyVersion?: string;
  description?: string;
  policy?: __DocumentType;
  createdDate?: number;
  lastModifiedDate?: number;
}
export interface CreateAccessPolicyResponse {
  accessPolicyDetail?: AccessPolicyDetail;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  resourceId?: string;
  resourceType?: string;
  serviceCode: string | undefined;
  quotaCode?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface DeleteAccessPolicyRequest {
  type: AccessPolicyType | undefined;
  name: string | undefined;
  clientToken?: string;
}
export interface DeleteAccessPolicyResponse {}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface GetAccessPolicyRequest {
  type: AccessPolicyType | undefined;
  name: string | undefined;
}
export interface GetAccessPolicyResponse {
  accessPolicyDetail?: AccessPolicyDetail;
}
export interface ListAccessPoliciesRequest {
  type: AccessPolicyType | undefined;
  resource?: string[];
  nextToken?: string;
  maxResults?: number;
}
export interface AccessPolicySummary {
  type?: AccessPolicyType;
  name?: string;
  policyVersion?: string;
  description?: string;
  createdDate?: number;
  lastModifiedDate?: number;
}
export interface ListAccessPoliciesResponse {
  accessPolicySummaries?: AccessPolicySummary[];
  nextToken?: string;
}
export interface UpdateAccessPolicyRequest {
  type: AccessPolicyType | undefined;
  name: string | undefined;
  policyVersion: string | undefined;
  description?: string;
  policy?: string;
  clientToken?: string;
}
export interface UpdateAccessPolicyResponse {
  accessPolicyDetail?: AccessPolicyDetail;
}
export interface AccessPolicyStats {
  DataPolicyCount?: number;
}
export interface CapacityLimits {
  maxIndexingCapacityInOCU?: number;
  maxSearchCapacityInOCU?: number;
}
export interface AccountSettingsDetail {
  capacityLimits?: CapacityLimits;
}
export interface BatchGetCollectionRequest {
  ids?: string[];
  names?: string[];
}
export declare const StandbyReplicas: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type StandbyReplicas =
  (typeof StandbyReplicas)[keyof typeof StandbyReplicas];
export declare const CollectionStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATING: "CREATING";
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
};
export type CollectionStatus =
  (typeof CollectionStatus)[keyof typeof CollectionStatus];
export declare const CollectionType: {
  readonly SEARCH: "SEARCH";
  readonly TIMESERIES: "TIMESERIES";
  readonly VECTORSEARCH: "VECTORSEARCH";
};
export type CollectionType =
  (typeof CollectionType)[keyof typeof CollectionType];
export interface CollectionDetail {
  id?: string;
  name?: string;
  status?: CollectionStatus;
  type?: CollectionType;
  description?: string;
  arn?: string;
  kmsKeyArn?: string;
  standbyReplicas?: StandbyReplicas;
  createdDate?: number;
  lastModifiedDate?: number;
  collectionEndpoint?: string;
  dashboardEndpoint?: string;
}
export interface CollectionErrorDetail {
  id?: string;
  name?: string;
  errorMessage?: string;
  errorCode?: string;
}
export interface BatchGetCollectionResponse {
  collectionDetails?: CollectionDetail[];
  collectionErrorDetails?: CollectionErrorDetail[];
}
export declare const LifecyclePolicyType: {
  readonly retention: "retention";
};
export type LifecyclePolicyType =
  (typeof LifecyclePolicyType)[keyof typeof LifecyclePolicyType];
export interface LifecyclePolicyResourceIdentifier {
  type: LifecyclePolicyType | undefined;
  resource: string | undefined;
}
export interface BatchGetEffectiveLifecyclePolicyRequest {
  resourceIdentifiers: LifecyclePolicyResourceIdentifier[] | undefined;
}
export declare const ResourceType: {
  readonly index: "index";
};
export type ResourceType = (typeof ResourceType)[keyof typeof ResourceType];
export interface EffectiveLifecyclePolicyDetail {
  type?: LifecyclePolicyType;
  resource?: string;
  policyName?: string;
  resourceType?: ResourceType;
  retentionPeriod?: string;
  noMinRetentionPeriod?: boolean;
}
export interface EffectiveLifecyclePolicyErrorDetail {
  type?: LifecyclePolicyType;
  resource?: string;
  errorMessage?: string;
  errorCode?: string;
}
export interface BatchGetEffectiveLifecyclePolicyResponse {
  effectiveLifecyclePolicyDetails?: EffectiveLifecyclePolicyDetail[];
  effectiveLifecyclePolicyErrorDetails?: EffectiveLifecyclePolicyErrorDetail[];
}
export interface LifecyclePolicyIdentifier {
  type: LifecyclePolicyType | undefined;
  name: string | undefined;
}
export interface BatchGetLifecyclePolicyRequest {
  identifiers: LifecyclePolicyIdentifier[] | undefined;
}
export interface LifecyclePolicyDetail {
  type?: LifecyclePolicyType;
  name?: string;
  policyVersion?: string;
  description?: string;
  policy?: __DocumentType;
  createdDate?: number;
  lastModifiedDate?: number;
}
export interface LifecyclePolicyErrorDetail {
  type?: LifecyclePolicyType;
  name?: string;
  errorMessage?: string;
  errorCode?: string;
}
export interface BatchGetLifecyclePolicyResponse {
  lifecyclePolicyDetails?: LifecyclePolicyDetail[];
  lifecyclePolicyErrorDetails?: LifecyclePolicyErrorDetail[];
}
export interface BatchGetVpcEndpointRequest {
  ids: string[] | undefined;
}
export declare const VpcEndpointStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly PENDING: "PENDING";
};
export type VpcEndpointStatus =
  (typeof VpcEndpointStatus)[keyof typeof VpcEndpointStatus];
export interface VpcEndpointDetail {
  id?: string;
  name?: string;
  vpcId?: string;
  subnetIds?: string[];
  securityGroupIds?: string[];
  status?: VpcEndpointStatus;
  createdDate?: number;
}
export interface VpcEndpointErrorDetail {
  id?: string;
  errorMessage?: string;
  errorCode?: string;
}
export interface BatchGetVpcEndpointResponse {
  vpcEndpointDetails?: VpcEndpointDetail[];
  vpcEndpointErrorDetails?: VpcEndpointErrorDetail[];
}
export interface Tag {
  key: string | undefined;
  value: string | undefined;
}
export interface CreateCollectionRequest {
  name: string | undefined;
  type?: CollectionType;
  description?: string;
  tags?: Tag[];
  standbyReplicas?: StandbyReplicas;
  clientToken?: string;
}
export interface CreateCollectionDetail {
  id?: string;
  name?: string;
  status?: CollectionStatus;
  type?: CollectionType;
  description?: string;
  arn?: string;
  kmsKeyArn?: string;
  standbyReplicas?: StandbyReplicas;
  createdDate?: number;
  lastModifiedDate?: number;
}
export interface CreateCollectionResponse {
  createCollectionDetail?: CreateCollectionDetail;
}
export declare class OcuLimitExceededException extends __BaseException {
  readonly name: "OcuLimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<OcuLimitExceededException, __BaseException>
  );
}
export interface DeleteCollectionRequest {
  id: string | undefined;
  clientToken?: string;
}
export interface DeleteCollectionDetail {
  id?: string;
  name?: string;
  status?: CollectionStatus;
}
export interface DeleteCollectionResponse {
  deleteCollectionDetail?: DeleteCollectionDetail;
}
export interface CollectionFilters {
  name?: string;
  status?: CollectionStatus;
}
export interface ListCollectionsRequest {
  collectionFilters?: CollectionFilters;
  nextToken?: string;
  maxResults?: number;
}
export interface CollectionSummary {
  id?: string;
  name?: string;
  status?: CollectionStatus;
  arn?: string;
}
export interface ListCollectionsResponse {
  collectionSummaries?: CollectionSummary[];
  nextToken?: string;
}
export interface UpdateCollectionRequest {
  id: string | undefined;
  description?: string;
  clientToken?: string;
}
export interface UpdateCollectionDetail {
  id?: string;
  name?: string;
  status?: CollectionStatus;
  type?: CollectionType;
  description?: string;
  arn?: string;
  createdDate?: number;
  lastModifiedDate?: number;
}
export interface UpdateCollectionResponse {
  updateCollectionDetail?: UpdateCollectionDetail;
}
export interface CreateLifecyclePolicyRequest {
  type: LifecyclePolicyType | undefined;
  name: string | undefined;
  description?: string;
  policy: string | undefined;
  clientToken?: string;
}
export interface CreateLifecyclePolicyResponse {
  lifecyclePolicyDetail?: LifecyclePolicyDetail;
}
export interface SamlConfigOptions {
  metadata: string | undefined;
  userAttribute?: string;
  groupAttribute?: string;
  sessionTimeout?: number;
}
export declare const SecurityConfigType: {
  readonly saml: "saml";
};
export type SecurityConfigType =
  (typeof SecurityConfigType)[keyof typeof SecurityConfigType];
export interface CreateSecurityConfigRequest {
  type: SecurityConfigType | undefined;
  name: string | undefined;
  description?: string;
  samlOptions?: SamlConfigOptions;
  clientToken?: string;
}
export interface SecurityConfigDetail {
  id?: string;
  type?: SecurityConfigType;
  configVersion?: string;
  description?: string;
  samlOptions?: SamlConfigOptions;
  createdDate?: number;
  lastModifiedDate?: number;
}
export interface CreateSecurityConfigResponse {
  securityConfigDetail?: SecurityConfigDetail;
}
export declare const SecurityPolicyType: {
  readonly encryption: "encryption";
  readonly network: "network";
};
export type SecurityPolicyType =
  (typeof SecurityPolicyType)[keyof typeof SecurityPolicyType];
export interface CreateSecurityPolicyRequest {
  type: SecurityPolicyType | undefined;
  name: string | undefined;
  description?: string;
  policy: string | undefined;
  clientToken?: string;
}
export interface SecurityPolicyDetail {
  type?: SecurityPolicyType;
  name?: string;
  policyVersion?: string;
  description?: string;
  policy?: __DocumentType;
  createdDate?: number;
  lastModifiedDate?: number;
}
export interface CreateSecurityPolicyResponse {
  securityPolicyDetail?: SecurityPolicyDetail;
}
export interface CreateVpcEndpointRequest {
  name: string | undefined;
  vpcId: string | undefined;
  subnetIds: string[] | undefined;
  securityGroupIds?: string[];
  clientToken?: string;
}
export interface CreateVpcEndpointDetail {
  id?: string;
  name?: string;
  status?: VpcEndpointStatus;
}
export interface CreateVpcEndpointResponse {
  createVpcEndpointDetail?: CreateVpcEndpointDetail;
}
export interface DeleteLifecyclePolicyRequest {
  type: LifecyclePolicyType | undefined;
  name: string | undefined;
  clientToken?: string;
}
export interface DeleteLifecyclePolicyResponse {}
export interface DeleteSecurityConfigRequest {
  id: string | undefined;
  clientToken?: string;
}
export interface DeleteSecurityConfigResponse {}
export interface DeleteSecurityPolicyRequest {
  type: SecurityPolicyType | undefined;
  name: string | undefined;
  clientToken?: string;
}
export interface DeleteSecurityPolicyResponse {}
export interface DeleteVpcEndpointRequest {
  id: string | undefined;
  clientToken?: string;
}
export interface DeleteVpcEndpointDetail {
  id?: string;
  name?: string;
  status?: VpcEndpointStatus;
}
export interface DeleteVpcEndpointResponse {
  deleteVpcEndpointDetail?: DeleteVpcEndpointDetail;
}
export interface GetAccountSettingsRequest {}
export interface GetAccountSettingsResponse {
  accountSettingsDetail?: AccountSettingsDetail;
}
export interface GetPoliciesStatsRequest {}
export interface LifecyclePolicyStats {
  RetentionPolicyCount?: number;
}
export interface SecurityConfigStats {
  SamlConfigCount?: number;
}
export interface SecurityPolicyStats {
  EncryptionPolicyCount?: number;
  NetworkPolicyCount?: number;
}
export interface GetPoliciesStatsResponse {
  AccessPolicyStats?: AccessPolicyStats;
  SecurityPolicyStats?: SecurityPolicyStats;
  SecurityConfigStats?: SecurityConfigStats;
  LifecyclePolicyStats?: LifecyclePolicyStats;
  TotalPolicyCount?: number;
}
export interface GetSecurityConfigRequest {
  id: string | undefined;
}
export interface GetSecurityConfigResponse {
  securityConfigDetail?: SecurityConfigDetail;
}
export interface GetSecurityPolicyRequest {
  type: SecurityPolicyType | undefined;
  name: string | undefined;
}
export interface GetSecurityPolicyResponse {
  securityPolicyDetail?: SecurityPolicyDetail;
}
export interface ListLifecyclePoliciesRequest {
  type: LifecyclePolicyType | undefined;
  resources?: string[];
  nextToken?: string;
  maxResults?: number;
}
export interface LifecyclePolicySummary {
  type?: LifecyclePolicyType;
  name?: string;
  policyVersion?: string;
  description?: string;
  createdDate?: number;
  lastModifiedDate?: number;
}
export interface ListLifecyclePoliciesResponse {
  lifecyclePolicySummaries?: LifecyclePolicySummary[];
  nextToken?: string;
}
export interface UpdateLifecyclePolicyRequest {
  type: LifecyclePolicyType | undefined;
  name: string | undefined;
  policyVersion: string | undefined;
  description?: string;
  policy?: string;
  clientToken?: string;
}
export interface UpdateLifecyclePolicyResponse {
  lifecyclePolicyDetail?: LifecyclePolicyDetail;
}
export interface ListSecurityConfigsRequest {
  type: SecurityConfigType | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface SecurityConfigSummary {
  id?: string;
  type?: SecurityConfigType;
  configVersion?: string;
  description?: string;
  createdDate?: number;
  lastModifiedDate?: number;
}
export interface ListSecurityConfigsResponse {
  securityConfigSummaries?: SecurityConfigSummary[];
  nextToken?: string;
}
export interface ListSecurityPoliciesRequest {
  type: SecurityPolicyType | undefined;
  resource?: string[];
  nextToken?: string;
  maxResults?: number;
}
export interface SecurityPolicySummary {
  type?: SecurityPolicyType;
  name?: string;
  policyVersion?: string;
  description?: string;
  createdDate?: number;
  lastModifiedDate?: number;
}
export interface ListSecurityPoliciesResponse {
  securityPolicySummaries?: SecurityPolicySummary[];
  nextToken?: string;
}
export interface ListTagsForResourceRequest {
  resourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  tags?: Tag[];
}
export interface VpcEndpointFilters {
  status?: VpcEndpointStatus;
}
export interface ListVpcEndpointsRequest {
  vpcEndpointFilters?: VpcEndpointFilters;
  nextToken?: string;
  maxResults?: number;
}
export interface VpcEndpointSummary {
  id?: string;
  name?: string;
  status?: VpcEndpointStatus;
}
export interface ListVpcEndpointsResponse {
  vpcEndpointSummaries?: VpcEndpointSummary[];
  nextToken?: string;
}
export interface UpdateSecurityConfigRequest {
  id: string | undefined;
  configVersion: string | undefined;
  description?: string;
  samlOptions?: SamlConfigOptions;
  clientToken?: string;
}
export interface UpdateSecurityConfigResponse {
  securityConfigDetail?: SecurityConfigDetail;
}
export interface UpdateSecurityPolicyRequest {
  type: SecurityPolicyType | undefined;
  name: string | undefined;
  policyVersion: string | undefined;
  description?: string;
  policy?: string;
  clientToken?: string;
}
export interface UpdateSecurityPolicyResponse {
  securityPolicyDetail?: SecurityPolicyDetail;
}
export interface TagResourceRequest {
  resourceArn: string | undefined;
  tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  resourceArn: string | undefined;
  tagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateAccountSettingsRequest {
  capacityLimits?: CapacityLimits;
}
export interface UpdateAccountSettingsResponse {
  accountSettingsDetail?: AccountSettingsDetail;
}
export interface UpdateVpcEndpointRequest {
  id: string | undefined;
  addSubnetIds?: string[];
  removeSubnetIds?: string[];
  addSecurityGroupIds?: string[];
  removeSecurityGroupIds?: string[];
  clientToken?: string;
}
export interface UpdateVpcEndpointDetail {
  id?: string;
  name?: string;
  status?: VpcEndpointStatus;
  subnetIds?: string[];
  securityGroupIds?: string[];
  lastModifiedDate?: number;
}
export interface UpdateVpcEndpointResponse {
  UpdateVpcEndpointDetail?: UpdateVpcEndpointDetail;
}
