"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AcceptInboundConnectionCommand: () => AcceptInboundConnectionCommand,
  AccessDeniedException: () => AccessDeniedException,
  ActionSeverity: () => ActionSeverity,
  ActionStatus: () => ActionStatus,
  ActionType: () => ActionType,
  AddDataSourceCommand: () => AddDataSourceCommand,
  AddTagsCommand: () => AddTagsCommand,
  AdvancedSecurityOptionsInputFilterSensitiveLog: () => AdvancedSecurityOptionsInputFilterSensitiveLog,
  AssociatePackageCommand: () => AssociatePackageCommand,
  AuthorizeVpcEndpointAccessCommand: () => AuthorizeVpcEndpointAccessCommand,
  AutoTuneDesiredState: () => AutoTuneDesiredState,
  AutoTuneState: () => AutoTuneState,
  AutoTuneType: () => AutoTuneType,
  BaseException: () => BaseException,
  CancelDomainConfigChangeCommand: () => CancelDomainConfigChangeCommand,
  CancelServiceSoftwareUpdateCommand: () => CancelServiceSoftwareUpdateCommand,
  ConfigChangeStatus: () => ConfigChangeStatus,
  ConflictException: () => ConflictException,
  ConnectionMode: () => ConnectionMode,
  CreateDomainCommand: () => CreateDomainCommand,
  CreateDomainRequestFilterSensitiveLog: () => CreateDomainRequestFilterSensitiveLog,
  CreateOutboundConnectionCommand: () => CreateOutboundConnectionCommand,
  CreatePackageCommand: () => CreatePackageCommand,
  CreateVpcEndpointCommand: () => CreateVpcEndpointCommand,
  DataSourceStatus: () => DataSourceStatus,
  DataSourceType: () => DataSourceType,
  DeleteDataSourceCommand: () => DeleteDataSourceCommand,
  DeleteDomainCommand: () => DeleteDomainCommand,
  DeleteInboundConnectionCommand: () => DeleteInboundConnectionCommand,
  DeleteOutboundConnectionCommand: () => DeleteOutboundConnectionCommand,
  DeletePackageCommand: () => DeletePackageCommand,
  DeleteVpcEndpointCommand: () => DeleteVpcEndpointCommand,
  DependencyFailureException: () => DependencyFailureException,
  DeploymentStatus: () => DeploymentStatus,
  DescribeDomainAutoTunesCommand: () => DescribeDomainAutoTunesCommand,
  DescribeDomainChangeProgressCommand: () => DescribeDomainChangeProgressCommand,
  DescribeDomainCommand: () => DescribeDomainCommand,
  DescribeDomainConfigCommand: () => DescribeDomainConfigCommand,
  DescribeDomainHealthCommand: () => DescribeDomainHealthCommand,
  DescribeDomainNodesCommand: () => DescribeDomainNodesCommand,
  DescribeDomainsCommand: () => DescribeDomainsCommand,
  DescribeDryRunProgressCommand: () => DescribeDryRunProgressCommand,
  DescribeInboundConnectionsCommand: () => DescribeInboundConnectionsCommand,
  DescribeInstanceTypeLimitsCommand: () => DescribeInstanceTypeLimitsCommand,
  DescribeOutboundConnectionsCommand: () => DescribeOutboundConnectionsCommand,
  DescribePackagesCommand: () => DescribePackagesCommand,
  DescribePackagesFilterName: () => DescribePackagesFilterName,
  DescribeReservedInstanceOfferingsCommand: () => DescribeReservedInstanceOfferingsCommand,
  DescribeReservedInstancesCommand: () => DescribeReservedInstancesCommand,
  DescribeVpcEndpointsCommand: () => DescribeVpcEndpointsCommand,
  DisabledOperationException: () => DisabledOperationException,
  DissociatePackageCommand: () => DissociatePackageCommand,
  DomainHealth: () => DomainHealth,
  DomainPackageStatus: () => DomainPackageStatus,
  DomainProcessingStatusType: () => DomainProcessingStatusType,
  DomainState: () => DomainState,
  DryRunMode: () => DryRunMode,
  EngineType: () => EngineType,
  GetCompatibleVersionsCommand: () => GetCompatibleVersionsCommand,
  GetDataSourceCommand: () => GetDataSourceCommand,
  GetDomainMaintenanceStatusCommand: () => GetDomainMaintenanceStatusCommand,
  GetPackageVersionHistoryCommand: () => GetPackageVersionHistoryCommand,
  GetUpgradeHistoryCommand: () => GetUpgradeHistoryCommand,
  GetUpgradeStatusCommand: () => GetUpgradeStatusCommand,
  IPAddressType: () => IPAddressType,
  InboundConnectionStatusCode: () => InboundConnectionStatusCode,
  InitiatedBy: () => InitiatedBy,
  InternalException: () => InternalException,
  InvalidPaginationTokenException: () => InvalidPaginationTokenException,
  InvalidTypeException: () => InvalidTypeException,
  LimitExceededException: () => LimitExceededException,
  ListDataSourcesCommand: () => ListDataSourcesCommand,
  ListDomainMaintenancesCommand: () => ListDomainMaintenancesCommand,
  ListDomainNamesCommand: () => ListDomainNamesCommand,
  ListDomainsForPackageCommand: () => ListDomainsForPackageCommand,
  ListInstanceTypeDetailsCommand: () => ListInstanceTypeDetailsCommand,
  ListPackagesForDomainCommand: () => ListPackagesForDomainCommand,
  ListScheduledActionsCommand: () => ListScheduledActionsCommand,
  ListTagsCommand: () => ListTagsCommand,
  ListVersionsCommand: () => ListVersionsCommand,
  ListVpcEndpointAccessCommand: () => ListVpcEndpointAccessCommand,
  ListVpcEndpointsCommand: () => ListVpcEndpointsCommand,
  ListVpcEndpointsForDomainCommand: () => ListVpcEndpointsForDomainCommand,
  LogType: () => LogType,
  MaintenanceStatus: () => MaintenanceStatus,
  MaintenanceType: () => MaintenanceType,
  MasterNodeStatus: () => MasterNodeStatus,
  MasterUserOptionsFilterSensitiveLog: () => MasterUserOptionsFilterSensitiveLog,
  NaturalLanguageQueryGenerationCurrentState: () => NaturalLanguageQueryGenerationCurrentState,
  NaturalLanguageQueryGenerationDesiredState: () => NaturalLanguageQueryGenerationDesiredState,
  NodeStatus: () => NodeStatus,
  NodeType: () => NodeType,
  OpenSearch: () => OpenSearch,
  OpenSearchClient: () => OpenSearchClient,
  OpenSearchPartitionInstanceType: () => OpenSearchPartitionInstanceType,
  OpenSearchServiceException: () => OpenSearchServiceException,
  OpenSearchWarmPartitionInstanceType: () => OpenSearchWarmPartitionInstanceType,
  OptionState: () => OptionState,
  OutboundConnectionStatusCode: () => OutboundConnectionStatusCode,
  OverallChangeStatus: () => OverallChangeStatus,
  PackageStatus: () => PackageStatus,
  PackageType: () => PackageType,
  PrincipalType: () => PrincipalType,
  PropertyValueType: () => PropertyValueType,
  PurchaseReservedInstanceOfferingCommand: () => PurchaseReservedInstanceOfferingCommand,
  RejectInboundConnectionCommand: () => RejectInboundConnectionCommand,
  RemoveTagsCommand: () => RemoveTagsCommand,
  ReservedInstancePaymentOption: () => ReservedInstancePaymentOption,
  ResourceAlreadyExistsException: () => ResourceAlreadyExistsException,
  ResourceNotFoundException: () => ResourceNotFoundException,
  RevokeVpcEndpointAccessCommand: () => RevokeVpcEndpointAccessCommand,
  RollbackOnDisable: () => RollbackOnDisable,
  SAMLOptionsInputFilterSensitiveLog: () => SAMLOptionsInputFilterSensitiveLog,
  ScheduleAt: () => ScheduleAt,
  ScheduledAutoTuneActionType: () => ScheduledAutoTuneActionType,
  ScheduledAutoTuneSeverityType: () => ScheduledAutoTuneSeverityType,
  ScheduledBy: () => ScheduledBy,
  SkipUnavailableStatus: () => SkipUnavailableStatus,
  SlotNotAvailableException: () => SlotNotAvailableException,
  StartDomainMaintenanceCommand: () => StartDomainMaintenanceCommand,
  StartServiceSoftwareUpdateCommand: () => StartServiceSoftwareUpdateCommand,
  TLSSecurityPolicy: () => TLSSecurityPolicy,
  TimeUnit: () => TimeUnit,
  UpdateDataSourceCommand: () => UpdateDataSourceCommand,
  UpdateDomainConfigCommand: () => UpdateDomainConfigCommand,
  UpdateDomainConfigRequestFilterSensitiveLog: () => UpdateDomainConfigRequestFilterSensitiveLog,
  UpdatePackageCommand: () => UpdatePackageCommand,
  UpdateScheduledActionCommand: () => UpdateScheduledActionCommand,
  UpdateVpcEndpointCommand: () => UpdateVpcEndpointCommand,
  UpgradeDomainCommand: () => UpgradeDomainCommand,
  UpgradeStatus: () => UpgradeStatus,
  UpgradeStep: () => UpgradeStep,
  ValidationException: () => ValidationException,
  VolumeType: () => VolumeType,
  VpcEndpointErrorCode: () => VpcEndpointErrorCode,
  VpcEndpointStatus: () => VpcEndpointStatus,
  ZoneStatus: () => ZoneStatus,
  __Client: () => import_smithy_client.Client,
  paginateDescribeDomainAutoTunes: () => paginateDescribeDomainAutoTunes,
  paginateDescribeInboundConnections: () => paginateDescribeInboundConnections,
  paginateDescribeOutboundConnections: () => paginateDescribeOutboundConnections,
  paginateDescribePackages: () => paginateDescribePackages,
  paginateDescribeReservedInstanceOfferings: () => paginateDescribeReservedInstanceOfferings,
  paginateDescribeReservedInstances: () => paginateDescribeReservedInstances,
  paginateGetPackageVersionHistory: () => paginateGetPackageVersionHistory,
  paginateGetUpgradeHistory: () => paginateGetUpgradeHistory,
  paginateListDomainMaintenances: () => paginateListDomainMaintenances,
  paginateListDomainsForPackage: () => paginateListDomainsForPackage,
  paginateListInstanceTypeDetails: () => paginateListInstanceTypeDetails,
  paginateListPackagesForDomain: () => paginateListPackagesForDomain,
  paginateListScheduledActions: () => paginateListScheduledActions,
  paginateListVersions: () => paginateListVersions
});
module.exports = __toCommonJS(src_exports);

// src/OpenSearchClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "es"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/OpenSearchClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/OpenSearchClient.ts
var _OpenSearchClient = class _OpenSearchClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);
    const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);
    const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultOpenSearchHttpAuthSchemeParametersProvider,
        identityProviderConfigProvider: async (config) => new import_core.DefaultIdentityProviderConfig({
          "aws.auth#sigv4": config.credentials
        })
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
};
__name(_OpenSearchClient, "OpenSearchClient");
var OpenSearchClient = _OpenSearchClient;

// src/OpenSearch.ts


// src/commands/AcceptInboundConnectionCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");


// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");



// src/models/models_0.ts


// src/models/OpenSearchServiceException.ts

var _OpenSearchServiceException = class _OpenSearchServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _OpenSearchServiceException.prototype);
  }
};
__name(_OpenSearchServiceException, "OpenSearchServiceException");
var OpenSearchServiceException = _OpenSearchServiceException;

// src/models/models_0.ts
var ConnectionMode = {
  DIRECT: "DIRECT",
  VPC_ENDPOINT: "VPC_ENDPOINT"
};
var InboundConnectionStatusCode = {
  ACTIVE: "ACTIVE",
  APPROVED: "APPROVED",
  DELETED: "DELETED",
  DELETING: "DELETING",
  PENDING_ACCEPTANCE: "PENDING_ACCEPTANCE",
  PROVISIONING: "PROVISIONING",
  REJECTED: "REJECTED",
  REJECTING: "REJECTING"
};
var _DisabledOperationException = class _DisabledOperationException extends OpenSearchServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DisabledOperationException",
      $fault: "client",
      ...opts
    });
    this.name = "DisabledOperationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _DisabledOperationException.prototype);
  }
};
__name(_DisabledOperationException, "DisabledOperationException");
var DisabledOperationException = _DisabledOperationException;
var _LimitExceededException = class _LimitExceededException extends OpenSearchServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LimitExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "LimitExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _LimitExceededException.prototype);
  }
};
__name(_LimitExceededException, "LimitExceededException");
var LimitExceededException = _LimitExceededException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends OpenSearchServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _AccessDeniedException = class _AccessDeniedException extends OpenSearchServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var OptionState = {
  Active: "Active",
  Processing: "Processing",
  RequiresIndexDocuments: "RequiresIndexDocuments"
};
var ActionSeverity = {
  HIGH: "HIGH",
  LOW: "LOW",
  MEDIUM: "MEDIUM"
};
var ActionStatus = {
  COMPLETED: "COMPLETED",
  ELIGIBLE: "ELIGIBLE",
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  NOT_ELIGIBLE: "NOT_ELIGIBLE",
  PENDING_UPDATE: "PENDING_UPDATE"
};
var ActionType = {
  JVM_HEAP_SIZE_TUNING: "JVM_HEAP_SIZE_TUNING",
  JVM_YOUNG_GEN_TUNING: "JVM_YOUNG_GEN_TUNING",
  SERVICE_SOFTWARE_UPDATE: "SERVICE_SOFTWARE_UPDATE"
};
var DataSourceType;
((DataSourceType3) => {
  DataSourceType3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.S3GlueDataCatalog !== void 0)
      return visitor.S3GlueDataCatalog(value.S3GlueDataCatalog);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(DataSourceType || (DataSourceType = {}));
var _BaseException = class _BaseException extends OpenSearchServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BaseException",
      $fault: "client",
      ...opts
    });
    this.name = "BaseException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _BaseException.prototype);
  }
};
__name(_BaseException, "BaseException");
var BaseException = _BaseException;
var _DependencyFailureException = class _DependencyFailureException extends OpenSearchServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DependencyFailureException",
      $fault: "client",
      ...opts
    });
    this.name = "DependencyFailureException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _DependencyFailureException.prototype);
  }
};
__name(_DependencyFailureException, "DependencyFailureException");
var DependencyFailureException = _DependencyFailureException;
var _InternalException = class _InternalException extends OpenSearchServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalException.prototype);
  }
};
__name(_InternalException, "InternalException");
var InternalException = _InternalException;
var _ValidationException = class _ValidationException extends OpenSearchServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var NaturalLanguageQueryGenerationDesiredState = {
  Disabled: "DISABLED",
  Enabled: "ENABLED"
};
var NaturalLanguageQueryGenerationCurrentState = {
  DisableComplete: "DISABLE_COMPLETE",
  DisableFailed: "DISABLE_FAILED",
  DisableInProgress: "DISABLE_IN_PROGRESS",
  EnableComplete: "ENABLE_COMPLETE",
  EnableFailed: "ENABLE_FAILED",
  EnableInProgress: "ENABLE_IN_PROGRESS",
  NotEnabled: "NOT_ENABLED"
};
var DomainPackageStatus = {
  ACTIVE: "ACTIVE",
  ASSOCIATING: "ASSOCIATING",
  ASSOCIATION_FAILED: "ASSOCIATION_FAILED",
  DISSOCIATING: "DISSOCIATING",
  DISSOCIATION_FAILED: "DISSOCIATION_FAILED"
};
var PackageType = {
  TXT_DICTIONARY: "TXT-DICTIONARY",
  ZIP_PLUGIN: "ZIP-PLUGIN"
};
var _ConflictException = class _ConflictException extends OpenSearchServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var PrincipalType = {
  AWS_ACCOUNT: "AWS_ACCOUNT",
  AWS_SERVICE: "AWS_SERVICE"
};
var DeploymentStatus = {
  COMPLETED: "COMPLETED",
  ELIGIBLE: "ELIGIBLE",
  IN_PROGRESS: "IN_PROGRESS",
  NOT_ELIGIBLE: "NOT_ELIGIBLE",
  PENDING_UPDATE: "PENDING_UPDATE"
};
var AutoTuneDesiredState = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var TimeUnit = {
  HOURS: "HOURS"
};
var OpenSearchPartitionInstanceType = {
  c4_2xlarge_search: "c4.2xlarge.search",
  c4_4xlarge_search: "c4.4xlarge.search",
  c4_8xlarge_search: "c4.8xlarge.search",
  c4_large_search: "c4.large.search",
  c4_xlarge_search: "c4.xlarge.search",
  c5_18xlarge_search: "c5.18xlarge.search",
  c5_2xlarge_search: "c5.2xlarge.search",
  c5_4xlarge_search: "c5.4xlarge.search",
  c5_9xlarge_search: "c5.9xlarge.search",
  c5_large_search: "c5.large.search",
  c5_xlarge_search: "c5.xlarge.search",
  c6g_12xlarge_search: "c6g.12xlarge.search",
  c6g_2xlarge_search: "c6g.2xlarge.search",
  c6g_4xlarge_search: "c6g.4xlarge.search",
  c6g_8xlarge_search: "c6g.8xlarge.search",
  c6g_large_search: "c6g.large.search",
  c6g_xlarge_search: "c6g.xlarge.search",
  d2_2xlarge_search: "d2.2xlarge.search",
  d2_4xlarge_search: "d2.4xlarge.search",
  d2_8xlarge_search: "d2.8xlarge.search",
  d2_xlarge_search: "d2.xlarge.search",
  i2_2xlarge_search: "i2.2xlarge.search",
  i2_xlarge_search: "i2.xlarge.search",
  i3_16xlarge_search: "i3.16xlarge.search",
  i3_2xlarge_search: "i3.2xlarge.search",
  i3_4xlarge_search: "i3.4xlarge.search",
  i3_8xlarge_search: "i3.8xlarge.search",
  i3_large_search: "i3.large.search",
  i3_xlarge_search: "i3.xlarge.search",
  m3_2xlarge_search: "m3.2xlarge.search",
  m3_large_search: "m3.large.search",
  m3_medium_search: "m3.medium.search",
  m3_xlarge_search: "m3.xlarge.search",
  m4_10xlarge_search: "m4.10xlarge.search",
  m4_2xlarge_search: "m4.2xlarge.search",
  m4_4xlarge_search: "m4.4xlarge.search",
  m4_large_search: "m4.large.search",
  m4_xlarge_search: "m4.xlarge.search",
  m5_12xlarge_search: "m5.12xlarge.search",
  m5_24xlarge_search: "m5.24xlarge.search",
  m5_2xlarge_search: "m5.2xlarge.search",
  m5_4xlarge_search: "m5.4xlarge.search",
  m5_large_search: "m5.large.search",
  m5_xlarge_search: "m5.xlarge.search",
  m6g_12xlarge_search: "m6g.12xlarge.search",
  m6g_2xlarge_search: "m6g.2xlarge.search",
  m6g_4xlarge_search: "m6g.4xlarge.search",
  m6g_8xlarge_search: "m6g.8xlarge.search",
  m6g_large_search: "m6g.large.search",
  m6g_xlarge_search: "m6g.xlarge.search",
  or1_12xlarge_search: "or1.12xlarge.search",
  or1_16xlarge_search: "or1.16xlarge.search",
  or1_2xlarge_search: "or1.2xlarge.search",
  or1_4xlarge_search: "or1.4xlarge.search",
  or1_8xlarge_search: "or1.8xlarge.search",
  or1_large_search: "or1.large.search",
  or1_medium_search: "or1.medium.search",
  or1_xlarge_search: "or1.xlarge.search",
  r3_2xlarge_search: "r3.2xlarge.search",
  r3_4xlarge_search: "r3.4xlarge.search",
  r3_8xlarge_search: "r3.8xlarge.search",
  r3_large_search: "r3.large.search",
  r3_xlarge_search: "r3.xlarge.search",
  r4_16xlarge_search: "r4.16xlarge.search",
  r4_2xlarge_search: "r4.2xlarge.search",
  r4_4xlarge_search: "r4.4xlarge.search",
  r4_8xlarge_search: "r4.8xlarge.search",
  r4_large_search: "r4.large.search",
  r4_xlarge_search: "r4.xlarge.search",
  r5_12xlarge_search: "r5.12xlarge.search",
  r5_24xlarge_search: "r5.24xlarge.search",
  r5_2xlarge_search: "r5.2xlarge.search",
  r5_4xlarge_search: "r5.4xlarge.search",
  r5_large_search: "r5.large.search",
  r5_xlarge_search: "r5.xlarge.search",
  r6g_12xlarge_search: "r6g.12xlarge.search",
  r6g_2xlarge_search: "r6g.2xlarge.search",
  r6g_4xlarge_search: "r6g.4xlarge.search",
  r6g_8xlarge_search: "r6g.8xlarge.search",
  r6g_large_search: "r6g.large.search",
  r6g_xlarge_search: "r6g.xlarge.search",
  r6gd_12xlarge_search: "r6gd.12xlarge.search",
  r6gd_16xlarge_search: "r6gd.16xlarge.search",
  r6gd_2xlarge_search: "r6gd.2xlarge.search",
  r6gd_4xlarge_search: "r6gd.4xlarge.search",
  r6gd_8xlarge_search: "r6gd.8xlarge.search",
  r6gd_large_search: "r6gd.large.search",
  r6gd_xlarge_search: "r6gd.xlarge.search",
  t2_medium_search: "t2.medium.search",
  t2_micro_search: "t2.micro.search",
  t2_small_search: "t2.small.search",
  t3_2xlarge_search: "t3.2xlarge.search",
  t3_large_search: "t3.large.search",
  t3_medium_search: "t3.medium.search",
  t3_micro_search: "t3.micro.search",
  t3_nano_search: "t3.nano.search",
  t3_small_search: "t3.small.search",
  t3_xlarge_search: "t3.xlarge.search",
  t4g_medium_search: "t4g.medium.search",
  t4g_small_search: "t4g.small.search",
  ultrawarm1_large_search: "ultrawarm1.large.search",
  ultrawarm1_medium_search: "ultrawarm1.medium.search",
  ultrawarm1_xlarge_search: "ultrawarm1.xlarge.search"
};
var OpenSearchWarmPartitionInstanceType = {
  ultrawarm1_large_search: "ultrawarm1.large.search",
  ultrawarm1_medium_search: "ultrawarm1.medium.search",
  ultrawarm1_xlarge_search: "ultrawarm1.xlarge.search"
};
var TLSSecurityPolicy = {
  POLICY_MIN_TLS_1_0_2019_07: "Policy-Min-TLS-1-0-2019-07",
  POLICY_MIN_TLS_1_2_2019_07: "Policy-Min-TLS-1-2-2019-07",
  POLICY_MIN_TLS_1_2_PFS_2023_10: "Policy-Min-TLS-1-2-PFS-2023-10"
};
var VolumeType = {
  gp2: "gp2",
  gp3: "gp3",
  io1: "io1",
  standard: "standard"
};
var IPAddressType = {
  DUALSTACK: "dualstack",
  IPV4: "ipv4"
};
var LogType = {
  AUDIT_LOGS: "AUDIT_LOGS",
  ES_APPLICATION_LOGS: "ES_APPLICATION_LOGS",
  INDEX_SLOW_LOGS: "INDEX_SLOW_LOGS",
  SEARCH_SLOW_LOGS: "SEARCH_SLOW_LOGS"
};
var AutoTuneState = {
  DISABLED: "DISABLED",
  DISABLED_AND_ROLLBACK_COMPLETE: "DISABLED_AND_ROLLBACK_COMPLETE",
  DISABLED_AND_ROLLBACK_ERROR: "DISABLED_AND_ROLLBACK_ERROR",
  DISABLED_AND_ROLLBACK_IN_PROGRESS: "DISABLED_AND_ROLLBACK_IN_PROGRESS",
  DISABLED_AND_ROLLBACK_SCHEDULED: "DISABLED_AND_ROLLBACK_SCHEDULED",
  DISABLE_IN_PROGRESS: "DISABLE_IN_PROGRESS",
  ENABLED: "ENABLED",
  ENABLE_IN_PROGRESS: "ENABLE_IN_PROGRESS",
  ERROR: "ERROR"
};
var ConfigChangeStatus = {
  APPLYING_CHANGES: "ApplyingChanges",
  CANCELLED: "Cancelled",
  COMPLETED: "Completed",
  INITIALIZING: "Initializing",
  PENDING: "Pending",
  PENDING_USER_INPUT: "PendingUserInput",
  VALIDATING: "Validating",
  VALIDATION_FAILED: "ValidationFailed"
};
var InitiatedBy = {
  CUSTOMER: "CUSTOMER",
  SERVICE: "SERVICE"
};
var DomainProcessingStatusType = {
  ACTIVE: "Active",
  CREATING: "Creating",
  DELETING: "Deleting",
  ISOLATED: "Isolated",
  MODIFYING: "Modifying",
  UPDATING: "UpdatingServiceSoftware",
  UPGRADING: "UpgradingEngineVersion"
};
var PropertyValueType = {
  PLAIN_TEXT: "PLAIN_TEXT",
  STRINGIFIED_JSON: "STRINGIFIED_JSON"
};
var _InvalidTypeException = class _InvalidTypeException extends OpenSearchServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidTypeException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidTypeException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidTypeException.prototype);
  }
};
__name(_InvalidTypeException, "InvalidTypeException");
var InvalidTypeException = _InvalidTypeException;
var _ResourceAlreadyExistsException = class _ResourceAlreadyExistsException extends OpenSearchServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceAlreadyExistsException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceAlreadyExistsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceAlreadyExistsException.prototype);
  }
};
__name(_ResourceAlreadyExistsException, "ResourceAlreadyExistsException");
var ResourceAlreadyExistsException = _ResourceAlreadyExistsException;
var SkipUnavailableStatus = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var OutboundConnectionStatusCode = {
  ACTIVE: "ACTIVE",
  APPROVED: "APPROVED",
  DELETED: "DELETED",
  DELETING: "DELETING",
  PENDING_ACCEPTANCE: "PENDING_ACCEPTANCE",
  PROVISIONING: "PROVISIONING",
  REJECTED: "REJECTED",
  REJECTING: "REJECTING",
  VALIDATING: "VALIDATING",
  VALIDATION_FAILED: "VALIDATION_FAILED"
};
var PackageStatus = {
  AVAILABLE: "AVAILABLE",
  COPYING: "COPYING",
  COPY_FAILED: "COPY_FAILED",
  DELETED: "DELETED",
  DELETE_FAILED: "DELETE_FAILED",
  DELETING: "DELETING",
  VALIDATING: "VALIDATING",
  VALIDATION_FAILED: "VALIDATION_FAILED"
};
var VpcEndpointStatus = {
  ACTIVE: "ACTIVE",
  CREATE_FAILED: "CREATE_FAILED",
  CREATING: "CREATING",
  DELETE_FAILED: "DELETE_FAILED",
  DELETING: "DELETING",
  UPDATE_FAILED: "UPDATE_FAILED",
  UPDATING: "UPDATING"
};
var ScheduledAutoTuneActionType = {
  JVM_HEAP_SIZE_TUNING: "JVM_HEAP_SIZE_TUNING",
  JVM_YOUNG_GEN_TUNING: "JVM_YOUNG_GEN_TUNING"
};
var ScheduledAutoTuneSeverityType = {
  HIGH: "HIGH",
  LOW: "LOW",
  MEDIUM: "MEDIUM"
};
var AutoTuneType = {
  SCHEDULED_ACTION: "SCHEDULED_ACTION"
};
var OverallChangeStatus = {
  COMPLETED: "COMPLETED",
  FAILED: "FAILED",
  PENDING: "PENDING",
  PROCESSING: "PROCESSING"
};
var RollbackOnDisable = {
  DEFAULT_ROLLBACK: "DEFAULT_ROLLBACK",
  NO_ROLLBACK: "NO_ROLLBACK"
};
var DomainHealth = {
  Green: "Green",
  NotAvailable: "NotAvailable",
  Red: "Red",
  Yellow: "Yellow"
};
var DomainState = {
  Active: "Active",
  NotAvailable: "NotAvailable",
  Processing: "Processing"
};
var ZoneStatus = {
  Active: "Active",
  NotAvailable: "NotAvailable",
  StandBy: "StandBy"
};
var MasterNodeStatus = {
  Available: "Available",
  UnAvailable: "UnAvailable"
};
var NodeStatus = {
  Active: "Active",
  NotAvailable: "NotAvailable",
  StandBy: "StandBy"
};
var NodeType = {
  Data: "Data",
  Master: "Master",
  Ultrawarm: "Ultrawarm"
};
var _InvalidPaginationTokenException = class _InvalidPaginationTokenException extends OpenSearchServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidPaginationTokenException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidPaginationTokenException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidPaginationTokenException.prototype);
  }
};
__name(_InvalidPaginationTokenException, "InvalidPaginationTokenException");
var InvalidPaginationTokenException = _InvalidPaginationTokenException;
var DescribePackagesFilterName = {
  EngineVersion: "EngineVersion",
  PackageID: "PackageID",
  PackageName: "PackageName",
  PackageStatus: "PackageStatus",
  PackageType: "PackageType"
};
var ReservedInstancePaymentOption = {
  ALL_UPFRONT: "ALL_UPFRONT",
  NO_UPFRONT: "NO_UPFRONT",
  PARTIAL_UPFRONT: "PARTIAL_UPFRONT"
};
var VpcEndpointErrorCode = {
  ENDPOINT_NOT_FOUND: "ENDPOINT_NOT_FOUND",
  SERVER_ERROR: "SERVER_ERROR"
};
var DataSourceStatus = {
  ACTIVE: "ACTIVE",
  DISABLED: "DISABLED"
};
var MaintenanceType = {
  REBOOT_NODE: "REBOOT_NODE",
  RESTART_DASHBOARD: "RESTART_DASHBOARD",
  RESTART_SEARCH_PROCESS: "RESTART_SEARCH_PROCESS"
};
var MaintenanceStatus = {
  COMPLETED: "COMPLETED",
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  PENDING: "PENDING",
  TIMED_OUT: "TIMED_OUT"
};
var UpgradeStep = {
  PRE_UPGRADE_CHECK: "PRE_UPGRADE_CHECK",
  SNAPSHOT: "SNAPSHOT",
  UPGRADE: "UPGRADE"
};
var UpgradeStatus = {
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  SUCCEEDED: "SUCCEEDED",
  SUCCEEDED_WITH_ISSUES: "SUCCEEDED_WITH_ISSUES"
};
var EngineType = {
  Elasticsearch: "Elasticsearch",
  OpenSearch: "OpenSearch"
};
var ScheduledBy = {
  CUSTOMER: "CUSTOMER",
  SYSTEM: "SYSTEM"
};
var ScheduleAt = {
  NOW: "NOW",
  OFF_PEAK_WINDOW: "OFF_PEAK_WINDOW",
  TIMESTAMP: "TIMESTAMP"
};
var DryRunMode = {
  Basic: "Basic",
  Verbose: "Verbose"
};
var _SlotNotAvailableException = class _SlotNotAvailableException extends OpenSearchServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SlotNotAvailableException",
      $fault: "client",
      ...opts
    });
    this.name = "SlotNotAvailableException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SlotNotAvailableException.prototype);
    this.SlotSuggestions = opts.SlotSuggestions;
  }
};
__name(_SlotNotAvailableException, "SlotNotAvailableException");
var SlotNotAvailableException = _SlotNotAvailableException;
var MasterUserOptionsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MasterUserName && { MasterUserName: import_smithy_client.SENSITIVE_STRING },
  ...obj.MasterUserPassword && { MasterUserPassword: import_smithy_client.SENSITIVE_STRING }
}), "MasterUserOptionsFilterSensitiveLog");
var SAMLOptionsInputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MasterUserName && { MasterUserName: import_smithy_client.SENSITIVE_STRING }
}), "SAMLOptionsInputFilterSensitiveLog");
var AdvancedSecurityOptionsInputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MasterUserOptions && { MasterUserOptions: MasterUserOptionsFilterSensitiveLog(obj.MasterUserOptions) },
  ...obj.SAMLOptions && { SAMLOptions: SAMLOptionsInputFilterSensitiveLog(obj.SAMLOptions) }
}), "AdvancedSecurityOptionsInputFilterSensitiveLog");
var CreateDomainRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.AdvancedSecurityOptions && {
    AdvancedSecurityOptions: AdvancedSecurityOptionsInputFilterSensitiveLog(obj.AdvancedSecurityOptions)
  }
}), "CreateDomainRequestFilterSensitiveLog");
var UpdateDomainConfigRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.AdvancedSecurityOptions && {
    AdvancedSecurityOptions: AdvancedSecurityOptionsInputFilterSensitiveLog(obj.AdvancedSecurityOptions)
  }
}), "UpdateDomainConfigRequestFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var se_AcceptInboundConnectionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}/accept");
  b.p("ConnectionId", () => input.ConnectionId, "{ConnectionId}", false);
  let body;
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_AcceptInboundConnectionCommand");
var se_AddDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/dataSource");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DataSourceType: (_) => (0, import_smithy_client._json)(_),
      Description: [],
      Name: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AddDataSourceCommand");
var se_AddTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/tags");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ARN: [],
      TagList: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AddTagsCommand");
var se_AssociatePackageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/packages/associate/{PackageID}/{DomainName}");
  b.p("PackageID", () => input.PackageID, "{PackageID}", false);
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AssociatePackageCommand");
var se_AuthorizeVpcEndpointAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/authorizeVpcEndpointAccess");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Account: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AuthorizeVpcEndpointAccessCommand");
var se_CancelDomainConfigChangeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/config/cancel");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DryRun: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CancelDomainConfigChangeCommand");
var se_CancelServiceSoftwareUpdateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/serviceSoftwareUpdate/cancel");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DomainName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CancelServiceSoftwareUpdateCommand");
var se_CreateDomainCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AIMLOptions: (_) => (0, import_smithy_client._json)(_),
      AccessPolicies: [],
      AdvancedOptions: (_) => (0, import_smithy_client._json)(_),
      AdvancedSecurityOptions: (_) => (0, import_smithy_client._json)(_),
      AutoTuneOptions: (_) => se_AutoTuneOptionsInput(_, context),
      ClusterConfig: (_) => (0, import_smithy_client._json)(_),
      CognitoOptions: (_) => (0, import_smithy_client._json)(_),
      DomainEndpointOptions: (_) => (0, import_smithy_client._json)(_),
      DomainName: [],
      EBSOptions: (_) => (0, import_smithy_client._json)(_),
      EncryptionAtRestOptions: (_) => (0, import_smithy_client._json)(_),
      EngineVersion: [],
      IPAddressType: [],
      LogPublishingOptions: (_) => (0, import_smithy_client._json)(_),
      NodeToNodeEncryptionOptions: (_) => (0, import_smithy_client._json)(_),
      OffPeakWindowOptions: (_) => (0, import_smithy_client._json)(_),
      SnapshotOptions: (_) => (0, import_smithy_client._json)(_),
      SoftwareUpdateOptions: (_) => (0, import_smithy_client._json)(_),
      TagList: (_) => (0, import_smithy_client._json)(_),
      VPCOptions: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateDomainCommand");
var se_CreateOutboundConnectionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/cc/outboundConnection");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ConnectionAlias: [],
      ConnectionMode: [],
      ConnectionProperties: (_) => (0, import_smithy_client._json)(_),
      LocalDomainInfo: (_) => (0, import_smithy_client._json)(_),
      RemoteDomainInfo: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateOutboundConnectionCommand");
var se_CreatePackageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/packages");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      PackageDescription: [],
      PackageName: [],
      PackageSource: (_) => (0, import_smithy_client._json)(_),
      PackageType: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreatePackageCommand");
var se_CreateVpcEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/vpcEndpoints");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientToken: [],
      DomainArn: [],
      VpcOptions: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateVpcEndpointCommand");
var se_DeleteDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/dataSource/{Name}");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDataSourceCommand");
var se_DeleteDomainCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDomainCommand");
var se_DeleteInboundConnectionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}");
  b.p("ConnectionId", () => input.ConnectionId, "{ConnectionId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteInboundConnectionCommand");
var se_DeleteOutboundConnectionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/cc/outboundConnection/{ConnectionId}");
  b.p("ConnectionId", () => input.ConnectionId, "{ConnectionId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteOutboundConnectionCommand");
var se_DeletePackageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/packages/{PackageID}");
  b.p("PackageID", () => input.PackageID, "{PackageID}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeletePackageCommand");
var se_DeleteVpcEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/vpcEndpoints/{VpcEndpointId}");
  b.p("VpcEndpointId", () => input.VpcEndpointId, "{VpcEndpointId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteVpcEndpointCommand");
var se_DescribeDomainCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeDomainCommand");
var se_DescribeDomainAutoTunesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/autoTunes");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      MaxResults: [],
      NextToken: []
    })
  );
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeDomainAutoTunesCommand");
var se_DescribeDomainChangeProgressCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/progress");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_c]: [, input[_CI]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeDomainChangeProgressCommand");
var se_DescribeDomainConfigCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/config");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeDomainConfigCommand");
var se_DescribeDomainHealthCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/health");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeDomainHealthCommand");
var se_DescribeDomainNodesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/nodes");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeDomainNodesCommand");
var se_DescribeDomainsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain-info");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DomainNames: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeDomainsCommand");
var se_DescribeDryRunProgressCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/dryRun");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_dRI]: [, input[_DRI]],
    [_lDRC]: [() => input.LoadDryRunConfig !== void 0, () => input[_LDRC].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeDryRunProgressCommand");
var se_DescribeInboundConnectionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/cc/inboundConnection/search");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Filters: (_) => (0, import_smithy_client._json)(_),
      MaxResults: [],
      NextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeInboundConnectionsCommand");
var se_DescribeInstanceTypeLimitsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/instanceTypeLimits/{EngineVersion}/{InstanceType}");
  b.p("InstanceType", () => input.InstanceType, "{InstanceType}", false);
  b.p("EngineVersion", () => input.EngineVersion, "{EngineVersion}", false);
  const query = (0, import_smithy_client.map)({
    [_dN]: [, input[_DN]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeInstanceTypeLimitsCommand");
var se_DescribeOutboundConnectionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/cc/outboundConnection/search");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Filters: (_) => (0, import_smithy_client._json)(_),
      MaxResults: [],
      NextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeOutboundConnectionsCommand");
var se_DescribePackagesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/packages/describe");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Filters: (_) => (0, import_smithy_client._json)(_),
      MaxResults: [],
      NextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribePackagesCommand");
var se_DescribeReservedInstanceOfferingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/reservedInstanceOfferings");
  const query = (0, import_smithy_client.map)({
    [_oI]: [, input[_RIOI]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeReservedInstanceOfferingsCommand");
var se_DescribeReservedInstancesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/reservedInstances");
  const query = (0, import_smithy_client.map)({
    [_rI]: [, input[_RII]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeReservedInstancesCommand");
var se_DescribeVpcEndpointsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/vpcEndpoints/describe");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      VpcEndpointIds: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeVpcEndpointsCommand");
var se_DissociatePackageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/packages/dissociate/{PackageID}/{DomainName}");
  b.p("PackageID", () => input.PackageID, "{PackageID}", false);
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DissociatePackageCommand");
var se_GetCompatibleVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/compatibleVersions");
  const query = (0, import_smithy_client.map)({
    [_dN]: [, input[_DN]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetCompatibleVersionsCommand");
var se_GetDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/dataSource/{Name}");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetDataSourceCommand");
var se_GetDomainMaintenanceStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/domainMaintenance");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_mI]: [, (0, import_smithy_client.expectNonNull)(input[_MI], `MaintenanceId`)]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetDomainMaintenanceStatusCommand");
var se_GetPackageVersionHistoryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/packages/{PackageID}/history");
  b.p("PackageID", () => input.PackageID, "{PackageID}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetPackageVersionHistoryCommand");
var se_GetUpgradeHistoryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/upgradeDomain/{DomainName}/history");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetUpgradeHistoryCommand");
var se_GetUpgradeStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/upgradeDomain/{DomainName}/status");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetUpgradeStatusCommand");
var se_ListDataSourcesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/dataSource");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListDataSourcesCommand");
var se_ListDomainMaintenancesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/domainMaintenances");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_a]: [, input[_A]],
    [_s]: [, input[_S]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDomainMaintenancesCommand");
var se_ListDomainNamesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/domain");
  const query = (0, import_smithy_client.map)({
    [_eT]: [, input[_ET]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDomainNamesCommand");
var se_ListDomainsForPackageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/packages/{PackageID}/domains");
  b.p("PackageID", () => input.PackageID, "{PackageID}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDomainsForPackageCommand");
var se_ListInstanceTypeDetailsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/instanceTypeDetails/{EngineVersion}");
  b.p("EngineVersion", () => input.EngineVersion, "{EngineVersion}", false);
  const query = (0, import_smithy_client.map)({
    [_dN]: [, input[_DN]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]],
    [_rAZ]: [() => input.RetrieveAZs !== void 0, () => input[_RAZ].toString()],
    [_iT]: [, input[_IT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListInstanceTypeDetailsCommand");
var se_ListPackagesForDomainCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/domain/{DomainName}/packages");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListPackagesForDomainCommand");
var se_ListScheduledActionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/scheduledActions");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListScheduledActionsCommand");
var se_ListTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/tags");
  const query = (0, import_smithy_client.map)({
    [_ar]: [, (0, import_smithy_client.expectNonNull)(input[_ARN], `ARN`)]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListTagsCommand");
var se_ListVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/versions");
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListVersionsCommand");
var se_ListVpcEndpointAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/listVpcEndpointAccess");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListVpcEndpointAccessCommand");
var se_ListVpcEndpointsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/vpcEndpoints");
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListVpcEndpointsCommand");
var se_ListVpcEndpointsForDomainCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/vpcEndpoints");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListVpcEndpointsForDomainCommand");
var se_PurchaseReservedInstanceOfferingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/purchaseReservedInstanceOffering");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      InstanceCount: [],
      ReservationName: [],
      ReservedInstanceOfferingId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_PurchaseReservedInstanceOfferingCommand");
var se_RejectInboundConnectionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}/reject");
  b.p("ConnectionId", () => input.ConnectionId, "{ConnectionId}", false);
  let body;
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_RejectInboundConnectionCommand");
var se_RemoveTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/tags-removal");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ARN: [],
      TagKeys: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_RemoveTagsCommand");
var se_RevokeVpcEndpointAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/revokeVpcEndpointAccess");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Account: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_RevokeVpcEndpointAccessCommand");
var se_StartDomainMaintenanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/domainMaintenance");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Action: [],
      NodeId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartDomainMaintenanceCommand");
var se_StartServiceSoftwareUpdateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/serviceSoftwareUpdate/start");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DesiredStartTime: [],
      DomainName: [],
      ScheduleAt: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartServiceSoftwareUpdateCommand");
var se_UpdateDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/dataSource/{Name}");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DataSourceType: (_) => (0, import_smithy_client._json)(_),
      Description: [],
      Status: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateDataSourceCommand");
var se_UpdateDomainConfigCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/config");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AIMLOptions: (_) => (0, import_smithy_client._json)(_),
      AccessPolicies: [],
      AdvancedOptions: (_) => (0, import_smithy_client._json)(_),
      AdvancedSecurityOptions: (_) => (0, import_smithy_client._json)(_),
      AutoTuneOptions: (_) => se_AutoTuneOptions(_, context),
      ClusterConfig: (_) => (0, import_smithy_client._json)(_),
      CognitoOptions: (_) => (0, import_smithy_client._json)(_),
      DomainEndpointOptions: (_) => (0, import_smithy_client._json)(_),
      DryRun: [],
      DryRunMode: [],
      EBSOptions: (_) => (0, import_smithy_client._json)(_),
      EncryptionAtRestOptions: (_) => (0, import_smithy_client._json)(_),
      IPAddressType: [],
      LogPublishingOptions: (_) => (0, import_smithy_client._json)(_),
      NodeToNodeEncryptionOptions: (_) => (0, import_smithy_client._json)(_),
      OffPeakWindowOptions: (_) => (0, import_smithy_client._json)(_),
      SnapshotOptions: (_) => (0, import_smithy_client._json)(_),
      SoftwareUpdateOptions: (_) => (0, import_smithy_client._json)(_),
      VPCOptions: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateDomainConfigCommand");
var se_UpdatePackageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/packages/update");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CommitMessage: [],
      PackageDescription: [],
      PackageID: [],
      PackageSource: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdatePackageCommand");
var se_UpdateScheduledActionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/scheduledAction/update");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ActionID: [],
      ActionType: [],
      DesiredStartTime: [],
      ScheduleAt: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateScheduledActionCommand");
var se_UpdateVpcEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/vpcEndpoints/update");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      VpcEndpointId: [],
      VpcOptions: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateVpcEndpointCommand");
var se_UpgradeDomainCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/upgradeDomain");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AdvancedOptions: (_) => (0, import_smithy_client._json)(_),
      DomainName: [],
      PerformCheckOnly: [],
      TargetVersion: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpgradeDomainCommand");
var de_AcceptInboundConnectionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Connection: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AcceptInboundConnectionCommand");
var de_AddDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AddDataSourceCommand");
var de_AddTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_AddTagsCommand");
var de_AssociatePackageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainPackageDetails: (_) => de_DomainPackageDetails(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AssociatePackageCommand");
var de_AuthorizeVpcEndpointAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AuthorizedPrincipal: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AuthorizeVpcEndpointAccessCommand");
var de_CancelDomainConfigChangeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CancelledChangeIds: import_smithy_client._json,
    CancelledChangeProperties: import_smithy_client._json,
    DryRun: import_smithy_client.expectBoolean
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CancelDomainConfigChangeCommand");
var de_CancelServiceSoftwareUpdateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ServiceSoftwareOptions: (_) => de_ServiceSoftwareOptions(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CancelServiceSoftwareUpdateCommand");
var de_CreateDomainCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainStatus: (_) => de_DomainStatus(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateDomainCommand");
var de_CreateOutboundConnectionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ConnectionAlias: import_smithy_client.expectString,
    ConnectionId: import_smithy_client.expectString,
    ConnectionMode: import_smithy_client.expectString,
    ConnectionProperties: import_smithy_client._json,
    ConnectionStatus: import_smithy_client._json,
    LocalDomainInfo: import_smithy_client._json,
    RemoteDomainInfo: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateOutboundConnectionCommand");
var de_CreatePackageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    PackageDetails: (_) => de_PackageDetails(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreatePackageCommand");
var de_CreateVpcEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    VpcEndpoint: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateVpcEndpointCommand");
var de_DeleteDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteDataSourceCommand");
var de_DeleteDomainCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainStatus: (_) => de_DomainStatus(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteDomainCommand");
var de_DeleteInboundConnectionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Connection: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteInboundConnectionCommand");
var de_DeleteOutboundConnectionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Connection: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteOutboundConnectionCommand");
var de_DeletePackageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    PackageDetails: (_) => de_PackageDetails(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeletePackageCommand");
var de_DeleteVpcEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    VpcEndpointSummary: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteVpcEndpointCommand");
var de_DescribeDomainCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainStatus: (_) => de_DomainStatus(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDomainCommand");
var de_DescribeDomainAutoTunesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AutoTunes: (_) => de_AutoTuneList(_, context),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDomainAutoTunesCommand");
var de_DescribeDomainChangeProgressCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChangeProgressStatus: (_) => de_ChangeProgressStatusDetails(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDomainChangeProgressCommand");
var de_DescribeDomainConfigCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainConfig: (_) => de_DomainConfig(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDomainConfigCommand");
var de_DescribeDomainHealthCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ActiveAvailabilityZoneCount: import_smithy_client.expectString,
    AvailabilityZoneCount: import_smithy_client.expectString,
    ClusterHealth: import_smithy_client.expectString,
    DataNodeCount: import_smithy_client.expectString,
    DedicatedMaster: import_smithy_client.expectBoolean,
    DomainState: import_smithy_client.expectString,
    EnvironmentInformation: import_smithy_client._json,
    MasterEligibleNodeCount: import_smithy_client.expectString,
    MasterNode: import_smithy_client.expectString,
    StandByAvailabilityZoneCount: import_smithy_client.expectString,
    TotalShards: import_smithy_client.expectString,
    TotalUnAssignedShards: import_smithy_client.expectString,
    WarmNodeCount: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDomainHealthCommand");
var de_DescribeDomainNodesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainNodesStatusList: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDomainNodesCommand");
var de_DescribeDomainsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainStatusList: (_) => de_DomainStatusList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDomainsCommand");
var de_DescribeDryRunProgressCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DryRunConfig: (_) => de_DomainStatus(_, context),
    DryRunProgressStatus: import_smithy_client._json,
    DryRunResults: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDryRunProgressCommand");
var de_DescribeInboundConnectionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Connections: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeInboundConnectionsCommand");
var de_DescribeInstanceTypeLimitsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    LimitsByRole: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeInstanceTypeLimitsCommand");
var de_DescribeOutboundConnectionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Connections: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeOutboundConnectionsCommand");
var de_DescribePackagesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    PackageDetailsList: (_) => de_PackageDetailsList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribePackagesCommand");
var de_DescribeReservedInstanceOfferingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    ReservedInstanceOfferings: (_) => de_ReservedInstanceOfferingList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeReservedInstanceOfferingsCommand");
var de_DescribeReservedInstancesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    ReservedInstances: (_) => de_ReservedInstanceList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeReservedInstancesCommand");
var de_DescribeVpcEndpointsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    VpcEndpointErrors: import_smithy_client._json,
    VpcEndpoints: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeVpcEndpointsCommand");
var de_DissociatePackageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainPackageDetails: (_) => de_DomainPackageDetails(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DissociatePackageCommand");
var de_GetCompatibleVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CompatibleVersions: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetCompatibleVersionsCommand");
var de_GetDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DataSourceType: (_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)),
    Description: import_smithy_client.expectString,
    Name: import_smithy_client.expectString,
    Status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDataSourceCommand");
var de_GetDomainMaintenanceStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Action: import_smithy_client.expectString,
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    NodeId: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    StatusMessage: import_smithy_client.expectString,
    UpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDomainMaintenanceStatusCommand");
var de_GetPackageVersionHistoryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    PackageID: import_smithy_client.expectString,
    PackageVersionHistoryList: (_) => de_PackageVersionHistoryList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetPackageVersionHistoryCommand");
var de_GetUpgradeHistoryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    UpgradeHistories: (_) => de_UpgradeHistoryList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetUpgradeHistoryCommand");
var de_GetUpgradeStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    StepStatus: import_smithy_client.expectString,
    UpgradeName: import_smithy_client.expectString,
    UpgradeStep: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetUpgradeStatusCommand");
var de_ListDataSourcesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DataSources: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDataSourcesCommand");
var de_ListDomainMaintenancesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainMaintenances: (_) => de_DomainMaintenanceList(_, context),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDomainMaintenancesCommand");
var de_ListDomainNamesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainNames: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDomainNamesCommand");
var de_ListDomainsForPackageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainPackageDetailsList: (_) => de_DomainPackageDetailsList(_, context),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDomainsForPackageCommand");
var de_ListInstanceTypeDetailsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    InstanceTypeDetails: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListInstanceTypeDetailsCommand");
var de_ListPackagesForDomainCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainPackageDetailsList: (_) => de_DomainPackageDetailsList(_, context),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListPackagesForDomainCommand");
var de_ListScheduledActionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    ScheduledActions: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListScheduledActionsCommand");
var de_ListTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    TagList: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsCommand");
var de_ListVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    Versions: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListVersionsCommand");
var de_ListVpcEndpointAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AuthorizedPrincipalList: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListVpcEndpointAccessCommand");
var de_ListVpcEndpointsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    VpcEndpointSummaryList: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListVpcEndpointsCommand");
var de_ListVpcEndpointsForDomainCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    VpcEndpointSummaryList: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListVpcEndpointsForDomainCommand");
var de_PurchaseReservedInstanceOfferingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ReservationName: import_smithy_client.expectString,
    ReservedInstanceId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PurchaseReservedInstanceOfferingCommand");
var de_RejectInboundConnectionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Connection: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_RejectInboundConnectionCommand");
var de_RemoveTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_RemoveTagsCommand");
var de_RevokeVpcEndpointAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_RevokeVpcEndpointAccessCommand");
var de_StartDomainMaintenanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MaintenanceId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartDomainMaintenanceCommand");
var de_StartServiceSoftwareUpdateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ServiceSoftwareOptions: (_) => de_ServiceSoftwareOptions(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartServiceSoftwareUpdateCommand");
var de_UpdateDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateDataSourceCommand");
var de_UpdateDomainConfigCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainConfig: (_) => de_DomainConfig(_, context),
    DryRunProgressStatus: import_smithy_client._json,
    DryRunResults: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateDomainConfigCommand");
var de_UpdatePackageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    PackageDetails: (_) => de_PackageDetails(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdatePackageCommand");
var de_UpdateScheduledActionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ScheduledAction: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateScheduledActionCommand");
var de_UpdateVpcEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    VpcEndpoint: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateVpcEndpointCommand");
var de_UpgradeDomainCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AdvancedOptions: import_smithy_client._json,
    ChangeProgressDetails: (_) => de_ChangeProgressDetails(_, context),
    DomainName: import_smithy_client.expectString,
    PerformCheckOnly: import_smithy_client.expectBoolean,
    TargetVersion: import_smithy_client.expectString,
    UpgradeId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpgradeDomainCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "DisabledOperationException":
    case "com.amazonaws.opensearch#DisabledOperationException":
      throw await de_DisabledOperationExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.opensearch#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.opensearch#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "BaseException":
    case "com.amazonaws.opensearch#BaseException":
      throw await de_BaseExceptionRes(parsedOutput, context);
    case "DependencyFailureException":
    case "com.amazonaws.opensearch#DependencyFailureException":
      throw await de_DependencyFailureExceptionRes(parsedOutput, context);
    case "InternalException":
    case "com.amazonaws.opensearch#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.opensearch#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "AccessDeniedException":
    case "com.amazonaws.opensearch#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.opensearch#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InvalidTypeException":
    case "com.amazonaws.opensearch#InvalidTypeException":
      throw await de_InvalidTypeExceptionRes(parsedOutput, context);
    case "ResourceAlreadyExistsException":
    case "com.amazonaws.opensearch#ResourceAlreadyExistsException":
      throw await de_ResourceAlreadyExistsExceptionRes(parsedOutput, context);
    case "InvalidPaginationTokenException":
    case "com.amazonaws.opensearch#InvalidPaginationTokenException":
      throw await de_InvalidPaginationTokenExceptionRes(parsedOutput, context);
    case "SlotNotAvailableException":
    case "com.amazonaws.opensearch#SlotNotAvailableException":
      throw await de_SlotNotAvailableExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(OpenSearchServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_BaseExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new BaseException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_BaseExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_DependencyFailureExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new DependencyFailureException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_DependencyFailureExceptionRes");
var de_DisabledOperationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new DisabledOperationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_DisabledOperationExceptionRes");
var de_InternalExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalExceptionRes");
var de_InvalidPaginationTokenExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidPaginationTokenException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidPaginationTokenExceptionRes");
var de_InvalidTypeExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidTypeException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidTypeExceptionRes");
var de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new LimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_LimitExceededExceptionRes");
var de_ResourceAlreadyExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceAlreadyExistsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceAlreadyExistsExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_SlotNotAvailableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    SlotSuggestions: import_smithy_client._json,
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new SlotNotAvailableException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_SlotNotAvailableExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var se_AutoTuneMaintenanceSchedule = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    CronExpressionForRecurrence: [],
    Duration: import_smithy_client._json,
    StartAt: (_) => _.getTime() / 1e3
  });
}, "se_AutoTuneMaintenanceSchedule");
var se_AutoTuneMaintenanceScheduleList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_AutoTuneMaintenanceSchedule(entry, context);
  });
}, "se_AutoTuneMaintenanceScheduleList");
var se_AutoTuneOptions = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    DesiredState: [],
    MaintenanceSchedules: (_) => se_AutoTuneMaintenanceScheduleList(_, context),
    RollbackOnDisable: [],
    UseOffPeakWindow: []
  });
}, "se_AutoTuneOptions");
var se_AutoTuneOptionsInput = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    DesiredState: [],
    MaintenanceSchedules: (_) => se_AutoTuneMaintenanceScheduleList(_, context),
    UseOffPeakWindow: []
  });
}, "se_AutoTuneOptionsInput");
var de_AccessPoliciesStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client.expectString,
    Status: (_) => de_OptionStatus(_, context)
  });
}, "de_AccessPoliciesStatus");
var de_AdvancedOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: (_) => de_OptionStatus(_, context)
  });
}, "de_AdvancedOptionsStatus");
var de_AdvancedSecurityOptions = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AnonymousAuthDisableDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    AnonymousAuthEnabled: import_smithy_client.expectBoolean,
    Enabled: import_smithy_client.expectBoolean,
    InternalUserDatabaseEnabled: import_smithy_client.expectBoolean,
    JWTOptions: import_smithy_client._json,
    SAMLOptions: import_smithy_client._json
  });
}, "de_AdvancedSecurityOptions");
var de_AdvancedSecurityOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: (_) => de_AdvancedSecurityOptions(_, context),
    Status: (_) => de_OptionStatus(_, context)
  });
}, "de_AdvancedSecurityOptionsStatus");
var de_AIMLOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: (_) => de_OptionStatus(_, context)
  });
}, "de_AIMLOptionsStatus");
var de_AutoTune = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AutoTuneDetails: (_) => de_AutoTuneDetails(_, context),
    AutoTuneType: import_smithy_client.expectString
  });
}, "de_AutoTune");
var de_AutoTuneDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ScheduledAutoTuneDetails: (_) => de_ScheduledAutoTuneDetails(_, context)
  });
}, "de_AutoTuneDetails");
var de_AutoTuneList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AutoTune(entry, context);
  });
  return retVal;
}, "de_AutoTuneList");
var de_AutoTuneMaintenanceSchedule = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CronExpressionForRecurrence: import_smithy_client.expectString,
    Duration: import_smithy_client._json,
    StartAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_AutoTuneMaintenanceSchedule");
var de_AutoTuneMaintenanceScheduleList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AutoTuneMaintenanceSchedule(entry, context);
  });
  return retVal;
}, "de_AutoTuneMaintenanceScheduleList");
var de_AutoTuneOptions = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DesiredState: import_smithy_client.expectString,
    MaintenanceSchedules: (_) => de_AutoTuneMaintenanceScheduleList(_, context),
    RollbackOnDisable: import_smithy_client.expectString,
    UseOffPeakWindow: import_smithy_client.expectBoolean
  });
}, "de_AutoTuneOptions");
var de_AutoTuneOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: (_) => de_AutoTuneOptions(_, context),
    Status: (_) => de_AutoTuneStatus(_, context)
  });
}, "de_AutoTuneOptionsStatus");
var de_AutoTuneStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreationDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ErrorMessage: import_smithy_client.expectString,
    PendingDeletion: import_smithy_client.expectBoolean,
    State: import_smithy_client.expectString,
    UpdateDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    UpdateVersion: import_smithy_client.expectInt32
  });
}, "de_AutoTuneStatus");
var de_ChangeProgressDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ChangeId: import_smithy_client.expectString,
    ConfigChangeStatus: import_smithy_client.expectString,
    InitiatedBy: import_smithy_client.expectString,
    LastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Message: import_smithy_client.expectString,
    StartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_ChangeProgressDetails");
var de_ChangeProgressStage = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Description: import_smithy_client.expectString,
    LastUpdated: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Name: import_smithy_client.expectString,
    Status: import_smithy_client.expectString
  });
}, "de_ChangeProgressStage");
var de_ChangeProgressStageList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ChangeProgressStage(entry, context);
  });
  return retVal;
}, "de_ChangeProgressStageList");
var de_ChangeProgressStatusDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ChangeId: import_smithy_client.expectString,
    ChangeProgressStages: (_) => de_ChangeProgressStageList(_, context),
    CompletedProperties: import_smithy_client._json,
    ConfigChangeStatus: import_smithy_client.expectString,
    InitiatedBy: import_smithy_client.expectString,
    LastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    PendingProperties: import_smithy_client._json,
    StartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Status: import_smithy_client.expectString,
    TotalNumberOfStages: import_smithy_client.expectInt32
  });
}, "de_ChangeProgressStatusDetails");
var de_ClusterConfigStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: (_) => de_OptionStatus(_, context)
  });
}, "de_ClusterConfigStatus");
var de_CognitoOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: (_) => de_OptionStatus(_, context)
  });
}, "de_CognitoOptionsStatus");
var de_DomainConfig = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AIMLOptions: (_) => de_AIMLOptionsStatus(_, context),
    AccessPolicies: (_) => de_AccessPoliciesStatus(_, context),
    AdvancedOptions: (_) => de_AdvancedOptionsStatus(_, context),
    AdvancedSecurityOptions: (_) => de_AdvancedSecurityOptionsStatus(_, context),
    AutoTuneOptions: (_) => de_AutoTuneOptionsStatus(_, context),
    ChangeProgressDetails: (_) => de_ChangeProgressDetails(_, context),
    ClusterConfig: (_) => de_ClusterConfigStatus(_, context),
    CognitoOptions: (_) => de_CognitoOptionsStatus(_, context),
    DomainEndpointOptions: (_) => de_DomainEndpointOptionsStatus(_, context),
    EBSOptions: (_) => de_EBSOptionsStatus(_, context),
    EncryptionAtRestOptions: (_) => de_EncryptionAtRestOptionsStatus(_, context),
    EngineVersion: (_) => de_VersionStatus(_, context),
    IPAddressType: (_) => de_IPAddressTypeStatus(_, context),
    LogPublishingOptions: (_) => de_LogPublishingOptionsStatus(_, context),
    ModifyingProperties: import_smithy_client._json,
    NodeToNodeEncryptionOptions: (_) => de_NodeToNodeEncryptionOptionsStatus(_, context),
    OffPeakWindowOptions: (_) => de_OffPeakWindowOptionsStatus(_, context),
    SnapshotOptions: (_) => de_SnapshotOptionsStatus(_, context),
    SoftwareUpdateOptions: (_) => de_SoftwareUpdateOptionsStatus(_, context),
    VPCOptions: (_) => de_VPCDerivedInfoStatus(_, context)
  });
}, "de_DomainConfig");
var de_DomainEndpointOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: (_) => de_OptionStatus(_, context)
  });
}, "de_DomainEndpointOptionsStatus");
var de_DomainMaintenanceDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Action: import_smithy_client.expectString,
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DomainName: import_smithy_client.expectString,
    MaintenanceId: import_smithy_client.expectString,
    NodeId: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    StatusMessage: import_smithy_client.expectString,
    UpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_DomainMaintenanceDetails");
var de_DomainMaintenanceList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DomainMaintenanceDetails(entry, context);
  });
  return retVal;
}, "de_DomainMaintenanceList");
var de_DomainPackageDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DomainName: import_smithy_client.expectString,
    DomainPackageStatus: import_smithy_client.expectString,
    ErrorDetails: import_smithy_client._json,
    LastUpdated: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    PackageID: import_smithy_client.expectString,
    PackageName: import_smithy_client.expectString,
    PackageType: import_smithy_client.expectString,
    PackageVersion: import_smithy_client.expectString,
    ReferencePath: import_smithy_client.expectString
  });
}, "de_DomainPackageDetails");
var de_DomainPackageDetailsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DomainPackageDetails(entry, context);
  });
  return retVal;
}, "de_DomainPackageDetailsList");
var de_DomainStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AIMLOptions: import_smithy_client._json,
    ARN: import_smithy_client.expectString,
    AccessPolicies: import_smithy_client.expectString,
    AdvancedOptions: import_smithy_client._json,
    AdvancedSecurityOptions: (_) => de_AdvancedSecurityOptions(_, context),
    AutoTuneOptions: import_smithy_client._json,
    ChangeProgressDetails: (_) => de_ChangeProgressDetails(_, context),
    ClusterConfig: import_smithy_client._json,
    CognitoOptions: import_smithy_client._json,
    Created: import_smithy_client.expectBoolean,
    Deleted: import_smithy_client.expectBoolean,
    DomainEndpointOptions: import_smithy_client._json,
    DomainEndpointV2HostedZoneId: import_smithy_client.expectString,
    DomainId: import_smithy_client.expectString,
    DomainName: import_smithy_client.expectString,
    DomainProcessingStatus: import_smithy_client.expectString,
    EBSOptions: import_smithy_client._json,
    EncryptionAtRestOptions: import_smithy_client._json,
    Endpoint: import_smithy_client.expectString,
    EndpointV2: import_smithy_client.expectString,
    Endpoints: import_smithy_client._json,
    EngineVersion: import_smithy_client.expectString,
    IPAddressType: import_smithy_client.expectString,
    LogPublishingOptions: import_smithy_client._json,
    ModifyingProperties: import_smithy_client._json,
    NodeToNodeEncryptionOptions: import_smithy_client._json,
    OffPeakWindowOptions: import_smithy_client._json,
    Processing: import_smithy_client.expectBoolean,
    ServiceSoftwareOptions: (_) => de_ServiceSoftwareOptions(_, context),
    SnapshotOptions: import_smithy_client._json,
    SoftwareUpdateOptions: import_smithy_client._json,
    UpgradeProcessing: import_smithy_client.expectBoolean,
    VPCOptions: import_smithy_client._json
  });
}, "de_DomainStatus");
var de_DomainStatusList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DomainStatus(entry, context);
  });
  return retVal;
}, "de_DomainStatusList");
var de_EBSOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: (_) => de_OptionStatus(_, context)
  });
}, "de_EBSOptionsStatus");
var de_EncryptionAtRestOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: (_) => de_OptionStatus(_, context)
  });
}, "de_EncryptionAtRestOptionsStatus");
var de_IPAddressTypeStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client.expectString,
    Status: (_) => de_OptionStatus(_, context)
  });
}, "de_IPAddressTypeStatus");
var de_LogPublishingOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: (_) => de_OptionStatus(_, context)
  });
}, "de_LogPublishingOptionsStatus");
var de_NodeToNodeEncryptionOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: (_) => de_OptionStatus(_, context)
  });
}, "de_NodeToNodeEncryptionOptionsStatus");
var de_OffPeakWindowOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: (_) => de_OptionStatus(_, context)
  });
}, "de_OffPeakWindowOptionsStatus");
var de_OptionStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreationDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    PendingDeletion: import_smithy_client.expectBoolean,
    State: import_smithy_client.expectString,
    UpdateDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    UpdateVersion: import_smithy_client.expectInt32
  });
}, "de_OptionStatus");
var de_PackageDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AvailablePackageVersion: import_smithy_client.expectString,
    AvailablePluginProperties: import_smithy_client._json,
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    EngineVersion: import_smithy_client.expectString,
    ErrorDetails: import_smithy_client._json,
    LastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    PackageDescription: import_smithy_client.expectString,
    PackageID: import_smithy_client.expectString,
    PackageName: import_smithy_client.expectString,
    PackageStatus: import_smithy_client.expectString,
    PackageType: import_smithy_client.expectString
  });
}, "de_PackageDetails");
var de_PackageDetailsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_PackageDetails(entry, context);
  });
  return retVal;
}, "de_PackageDetailsList");
var de_PackageVersionHistory = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CommitMessage: import_smithy_client.expectString,
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    PackageVersion: import_smithy_client.expectString,
    PluginProperties: import_smithy_client._json
  });
}, "de_PackageVersionHistory");
var de_PackageVersionHistoryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_PackageVersionHistory(entry, context);
  });
  return retVal;
}, "de_PackageVersionHistoryList");
var de_RecurringCharge = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    RecurringChargeAmount: import_smithy_client.limitedParseDouble,
    RecurringChargeFrequency: import_smithy_client.expectString
  });
}, "de_RecurringCharge");
var de_RecurringChargeList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RecurringCharge(entry, context);
  });
  return retVal;
}, "de_RecurringChargeList");
var de_ReservedInstance = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    BillingSubscriptionId: import_smithy_client.expectLong,
    CurrencyCode: import_smithy_client.expectString,
    Duration: import_smithy_client.expectInt32,
    FixedPrice: import_smithy_client.limitedParseDouble,
    InstanceCount: import_smithy_client.expectInt32,
    InstanceType: import_smithy_client.expectString,
    PaymentOption: import_smithy_client.expectString,
    RecurringCharges: (_) => de_RecurringChargeList(_, context),
    ReservationName: import_smithy_client.expectString,
    ReservedInstanceId: import_smithy_client.expectString,
    ReservedInstanceOfferingId: import_smithy_client.expectString,
    StartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    State: import_smithy_client.expectString,
    UsagePrice: import_smithy_client.limitedParseDouble
  });
}, "de_ReservedInstance");
var de_ReservedInstanceList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ReservedInstance(entry, context);
  });
  return retVal;
}, "de_ReservedInstanceList");
var de_ReservedInstanceOffering = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CurrencyCode: import_smithy_client.expectString,
    Duration: import_smithy_client.expectInt32,
    FixedPrice: import_smithy_client.limitedParseDouble,
    InstanceType: import_smithy_client.expectString,
    PaymentOption: import_smithy_client.expectString,
    RecurringCharges: (_) => de_RecurringChargeList(_, context),
    ReservedInstanceOfferingId: import_smithy_client.expectString,
    UsagePrice: import_smithy_client.limitedParseDouble
  });
}, "de_ReservedInstanceOffering");
var de_ReservedInstanceOfferingList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ReservedInstanceOffering(entry, context);
  });
  return retVal;
}, "de_ReservedInstanceOfferingList");
var de_ScheduledAutoTuneDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Action: import_smithy_client.expectString,
    ActionType: import_smithy_client.expectString,
    Date: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Severity: import_smithy_client.expectString
  });
}, "de_ScheduledAutoTuneDetails");
var de_ServiceSoftwareOptions = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AutomatedUpdateDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Cancellable: import_smithy_client.expectBoolean,
    CurrentVersion: import_smithy_client.expectString,
    Description: import_smithy_client.expectString,
    NewVersion: import_smithy_client.expectString,
    OptionalDeployment: import_smithy_client.expectBoolean,
    UpdateAvailable: import_smithy_client.expectBoolean,
    UpdateStatus: import_smithy_client.expectString
  });
}, "de_ServiceSoftwareOptions");
var de_SnapshotOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: (_) => de_OptionStatus(_, context)
  });
}, "de_SnapshotOptionsStatus");
var de_SoftwareUpdateOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: (_) => de_OptionStatus(_, context)
  });
}, "de_SoftwareUpdateOptionsStatus");
var de_UpgradeHistory = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    StartTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    StepsList: (_) => de_UpgradeStepsList(_, context),
    UpgradeName: import_smithy_client.expectString,
    UpgradeStatus: import_smithy_client.expectString
  });
}, "de_UpgradeHistory");
var de_UpgradeHistoryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_UpgradeHistory(entry, context);
  });
  return retVal;
}, "de_UpgradeHistoryList");
var de_UpgradeStepItem = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Issues: import_smithy_client._json,
    ProgressPercent: import_smithy_client.limitedParseDouble,
    UpgradeStep: import_smithy_client.expectString,
    UpgradeStepStatus: import_smithy_client.expectString
  });
}, "de_UpgradeStepItem");
var de_UpgradeStepsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_UpgradeStepItem(entry, context);
  });
  return retVal;
}, "de_UpgradeStepsList");
var de_VersionStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client.expectString,
    Status: (_) => de_OptionStatus(_, context)
  });
}, "de_VersionStatus");
var de_VPCDerivedInfoStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: (_) => de_OptionStatus(_, context)
  });
}, "de_VPCDerivedInfoStatus");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _A = "Action";
var _ARN = "ARN";
var _CI = "ChangeId";
var _DN = "DomainName";
var _DRI = "DryRunId";
var _ET = "EngineType";
var _IT = "InstanceType";
var _LDRC = "LoadDryRunConfig";
var _MI = "MaintenanceId";
var _MR = "MaxResults";
var _NT = "NextToken";
var _RAZ = "RetrieveAZs";
var _RII = "ReservedInstanceId";
var _RIOI = "ReservedInstanceOfferingId";
var _S = "Status";
var _a = "action";
var _ar = "arn";
var _c = "changeid";
var _dN = "domainName";
var _dRI = "dryRunId";
var _eT = "engineType";
var _iT = "instanceType";
var _lDRC = "loadDryRunConfig";
var _mI = "maintenanceId";
var _mR = "maxResults";
var _nT = "nextToken";
var _oI = "offeringId";
var _rAZ = "retrieveAZs";
var _rI = "reservationId";
var _s = "status";

// src/commands/AcceptInboundConnectionCommand.ts
var _AcceptInboundConnectionCommand = class _AcceptInboundConnectionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "AcceptInboundConnection", {}).n("OpenSearchClient", "AcceptInboundConnectionCommand").f(void 0, void 0).ser(se_AcceptInboundConnectionCommand).de(de_AcceptInboundConnectionCommand).build() {
};
__name(_AcceptInboundConnectionCommand, "AcceptInboundConnectionCommand");
var AcceptInboundConnectionCommand = _AcceptInboundConnectionCommand;

// src/commands/AddDataSourceCommand.ts



var _AddDataSourceCommand = class _AddDataSourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "AddDataSource", {}).n("OpenSearchClient", "AddDataSourceCommand").f(void 0, void 0).ser(se_AddDataSourceCommand).de(de_AddDataSourceCommand).build() {
};
__name(_AddDataSourceCommand, "AddDataSourceCommand");
var AddDataSourceCommand = _AddDataSourceCommand;

// src/commands/AddTagsCommand.ts



var _AddTagsCommand = class _AddTagsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "AddTags", {}).n("OpenSearchClient", "AddTagsCommand").f(void 0, void 0).ser(se_AddTagsCommand).de(de_AddTagsCommand).build() {
};
__name(_AddTagsCommand, "AddTagsCommand");
var AddTagsCommand = _AddTagsCommand;

// src/commands/AssociatePackageCommand.ts



var _AssociatePackageCommand = class _AssociatePackageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "AssociatePackage", {}).n("OpenSearchClient", "AssociatePackageCommand").f(void 0, void 0).ser(se_AssociatePackageCommand).de(de_AssociatePackageCommand).build() {
};
__name(_AssociatePackageCommand, "AssociatePackageCommand");
var AssociatePackageCommand = _AssociatePackageCommand;

// src/commands/AuthorizeVpcEndpointAccessCommand.ts



var _AuthorizeVpcEndpointAccessCommand = class _AuthorizeVpcEndpointAccessCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "AuthorizeVpcEndpointAccess", {}).n("OpenSearchClient", "AuthorizeVpcEndpointAccessCommand").f(void 0, void 0).ser(se_AuthorizeVpcEndpointAccessCommand).de(de_AuthorizeVpcEndpointAccessCommand).build() {
};
__name(_AuthorizeVpcEndpointAccessCommand, "AuthorizeVpcEndpointAccessCommand");
var AuthorizeVpcEndpointAccessCommand = _AuthorizeVpcEndpointAccessCommand;

// src/commands/CancelDomainConfigChangeCommand.ts



var _CancelDomainConfigChangeCommand = class _CancelDomainConfigChangeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "CancelDomainConfigChange", {}).n("OpenSearchClient", "CancelDomainConfigChangeCommand").f(void 0, void 0).ser(se_CancelDomainConfigChangeCommand).de(de_CancelDomainConfigChangeCommand).build() {
};
__name(_CancelDomainConfigChangeCommand, "CancelDomainConfigChangeCommand");
var CancelDomainConfigChangeCommand = _CancelDomainConfigChangeCommand;

// src/commands/CancelServiceSoftwareUpdateCommand.ts



var _CancelServiceSoftwareUpdateCommand = class _CancelServiceSoftwareUpdateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "CancelServiceSoftwareUpdate", {}).n("OpenSearchClient", "CancelServiceSoftwareUpdateCommand").f(void 0, void 0).ser(se_CancelServiceSoftwareUpdateCommand).de(de_CancelServiceSoftwareUpdateCommand).build() {
};
__name(_CancelServiceSoftwareUpdateCommand, "CancelServiceSoftwareUpdateCommand");
var CancelServiceSoftwareUpdateCommand = _CancelServiceSoftwareUpdateCommand;

// src/commands/CreateDomainCommand.ts



var _CreateDomainCommand = class _CreateDomainCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "CreateDomain", {}).n("OpenSearchClient", "CreateDomainCommand").f(CreateDomainRequestFilterSensitiveLog, void 0).ser(se_CreateDomainCommand).de(de_CreateDomainCommand).build() {
};
__name(_CreateDomainCommand, "CreateDomainCommand");
var CreateDomainCommand = _CreateDomainCommand;

// src/commands/CreateOutboundConnectionCommand.ts



var _CreateOutboundConnectionCommand = class _CreateOutboundConnectionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "CreateOutboundConnection", {}).n("OpenSearchClient", "CreateOutboundConnectionCommand").f(void 0, void 0).ser(se_CreateOutboundConnectionCommand).de(de_CreateOutboundConnectionCommand).build() {
};
__name(_CreateOutboundConnectionCommand, "CreateOutboundConnectionCommand");
var CreateOutboundConnectionCommand = _CreateOutboundConnectionCommand;

// src/commands/CreatePackageCommand.ts



var _CreatePackageCommand = class _CreatePackageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "CreatePackage", {}).n("OpenSearchClient", "CreatePackageCommand").f(void 0, void 0).ser(se_CreatePackageCommand).de(de_CreatePackageCommand).build() {
};
__name(_CreatePackageCommand, "CreatePackageCommand");
var CreatePackageCommand = _CreatePackageCommand;

// src/commands/CreateVpcEndpointCommand.ts



var _CreateVpcEndpointCommand = class _CreateVpcEndpointCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "CreateVpcEndpoint", {}).n("OpenSearchClient", "CreateVpcEndpointCommand").f(void 0, void 0).ser(se_CreateVpcEndpointCommand).de(de_CreateVpcEndpointCommand).build() {
};
__name(_CreateVpcEndpointCommand, "CreateVpcEndpointCommand");
var CreateVpcEndpointCommand = _CreateVpcEndpointCommand;

// src/commands/DeleteDataSourceCommand.ts



var _DeleteDataSourceCommand = class _DeleteDataSourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DeleteDataSource", {}).n("OpenSearchClient", "DeleteDataSourceCommand").f(void 0, void 0).ser(se_DeleteDataSourceCommand).de(de_DeleteDataSourceCommand).build() {
};
__name(_DeleteDataSourceCommand, "DeleteDataSourceCommand");
var DeleteDataSourceCommand = _DeleteDataSourceCommand;

// src/commands/DeleteDomainCommand.ts



var _DeleteDomainCommand = class _DeleteDomainCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DeleteDomain", {}).n("OpenSearchClient", "DeleteDomainCommand").f(void 0, void 0).ser(se_DeleteDomainCommand).de(de_DeleteDomainCommand).build() {
};
__name(_DeleteDomainCommand, "DeleteDomainCommand");
var DeleteDomainCommand = _DeleteDomainCommand;

// src/commands/DeleteInboundConnectionCommand.ts



var _DeleteInboundConnectionCommand = class _DeleteInboundConnectionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DeleteInboundConnection", {}).n("OpenSearchClient", "DeleteInboundConnectionCommand").f(void 0, void 0).ser(se_DeleteInboundConnectionCommand).de(de_DeleteInboundConnectionCommand).build() {
};
__name(_DeleteInboundConnectionCommand, "DeleteInboundConnectionCommand");
var DeleteInboundConnectionCommand = _DeleteInboundConnectionCommand;

// src/commands/DeleteOutboundConnectionCommand.ts



var _DeleteOutboundConnectionCommand = class _DeleteOutboundConnectionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DeleteOutboundConnection", {}).n("OpenSearchClient", "DeleteOutboundConnectionCommand").f(void 0, void 0).ser(se_DeleteOutboundConnectionCommand).de(de_DeleteOutboundConnectionCommand).build() {
};
__name(_DeleteOutboundConnectionCommand, "DeleteOutboundConnectionCommand");
var DeleteOutboundConnectionCommand = _DeleteOutboundConnectionCommand;

// src/commands/DeletePackageCommand.ts



var _DeletePackageCommand = class _DeletePackageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DeletePackage", {}).n("OpenSearchClient", "DeletePackageCommand").f(void 0, void 0).ser(se_DeletePackageCommand).de(de_DeletePackageCommand).build() {
};
__name(_DeletePackageCommand, "DeletePackageCommand");
var DeletePackageCommand = _DeletePackageCommand;

// src/commands/DeleteVpcEndpointCommand.ts



var _DeleteVpcEndpointCommand = class _DeleteVpcEndpointCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DeleteVpcEndpoint", {}).n("OpenSearchClient", "DeleteVpcEndpointCommand").f(void 0, void 0).ser(se_DeleteVpcEndpointCommand).de(de_DeleteVpcEndpointCommand).build() {
};
__name(_DeleteVpcEndpointCommand, "DeleteVpcEndpointCommand");
var DeleteVpcEndpointCommand = _DeleteVpcEndpointCommand;

// src/commands/DescribeDomainAutoTunesCommand.ts



var _DescribeDomainAutoTunesCommand = class _DescribeDomainAutoTunesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeDomainAutoTunes", {}).n("OpenSearchClient", "DescribeDomainAutoTunesCommand").f(void 0, void 0).ser(se_DescribeDomainAutoTunesCommand).de(de_DescribeDomainAutoTunesCommand).build() {
};
__name(_DescribeDomainAutoTunesCommand, "DescribeDomainAutoTunesCommand");
var DescribeDomainAutoTunesCommand = _DescribeDomainAutoTunesCommand;

// src/commands/DescribeDomainChangeProgressCommand.ts



var _DescribeDomainChangeProgressCommand = class _DescribeDomainChangeProgressCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeDomainChangeProgress", {}).n("OpenSearchClient", "DescribeDomainChangeProgressCommand").f(void 0, void 0).ser(se_DescribeDomainChangeProgressCommand).de(de_DescribeDomainChangeProgressCommand).build() {
};
__name(_DescribeDomainChangeProgressCommand, "DescribeDomainChangeProgressCommand");
var DescribeDomainChangeProgressCommand = _DescribeDomainChangeProgressCommand;

// src/commands/DescribeDomainCommand.ts



var _DescribeDomainCommand = class _DescribeDomainCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeDomain", {}).n("OpenSearchClient", "DescribeDomainCommand").f(void 0, void 0).ser(se_DescribeDomainCommand).de(de_DescribeDomainCommand).build() {
};
__name(_DescribeDomainCommand, "DescribeDomainCommand");
var DescribeDomainCommand = _DescribeDomainCommand;

// src/commands/DescribeDomainConfigCommand.ts



var _DescribeDomainConfigCommand = class _DescribeDomainConfigCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeDomainConfig", {}).n("OpenSearchClient", "DescribeDomainConfigCommand").f(void 0, void 0).ser(se_DescribeDomainConfigCommand).de(de_DescribeDomainConfigCommand).build() {
};
__name(_DescribeDomainConfigCommand, "DescribeDomainConfigCommand");
var DescribeDomainConfigCommand = _DescribeDomainConfigCommand;

// src/commands/DescribeDomainHealthCommand.ts



var _DescribeDomainHealthCommand = class _DescribeDomainHealthCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeDomainHealth", {}).n("OpenSearchClient", "DescribeDomainHealthCommand").f(void 0, void 0).ser(se_DescribeDomainHealthCommand).de(de_DescribeDomainHealthCommand).build() {
};
__name(_DescribeDomainHealthCommand, "DescribeDomainHealthCommand");
var DescribeDomainHealthCommand = _DescribeDomainHealthCommand;

// src/commands/DescribeDomainNodesCommand.ts



var _DescribeDomainNodesCommand = class _DescribeDomainNodesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeDomainNodes", {}).n("OpenSearchClient", "DescribeDomainNodesCommand").f(void 0, void 0).ser(se_DescribeDomainNodesCommand).de(de_DescribeDomainNodesCommand).build() {
};
__name(_DescribeDomainNodesCommand, "DescribeDomainNodesCommand");
var DescribeDomainNodesCommand = _DescribeDomainNodesCommand;

// src/commands/DescribeDomainsCommand.ts



var _DescribeDomainsCommand = class _DescribeDomainsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeDomains", {}).n("OpenSearchClient", "DescribeDomainsCommand").f(void 0, void 0).ser(se_DescribeDomainsCommand).de(de_DescribeDomainsCommand).build() {
};
__name(_DescribeDomainsCommand, "DescribeDomainsCommand");
var DescribeDomainsCommand = _DescribeDomainsCommand;

// src/commands/DescribeDryRunProgressCommand.ts



var _DescribeDryRunProgressCommand = class _DescribeDryRunProgressCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeDryRunProgress", {}).n("OpenSearchClient", "DescribeDryRunProgressCommand").f(void 0, void 0).ser(se_DescribeDryRunProgressCommand).de(de_DescribeDryRunProgressCommand).build() {
};
__name(_DescribeDryRunProgressCommand, "DescribeDryRunProgressCommand");
var DescribeDryRunProgressCommand = _DescribeDryRunProgressCommand;

// src/commands/DescribeInboundConnectionsCommand.ts



var _DescribeInboundConnectionsCommand = class _DescribeInboundConnectionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeInboundConnections", {}).n("OpenSearchClient", "DescribeInboundConnectionsCommand").f(void 0, void 0).ser(se_DescribeInboundConnectionsCommand).de(de_DescribeInboundConnectionsCommand).build() {
};
__name(_DescribeInboundConnectionsCommand, "DescribeInboundConnectionsCommand");
var DescribeInboundConnectionsCommand = _DescribeInboundConnectionsCommand;

// src/commands/DescribeInstanceTypeLimitsCommand.ts



var _DescribeInstanceTypeLimitsCommand = class _DescribeInstanceTypeLimitsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeInstanceTypeLimits", {}).n("OpenSearchClient", "DescribeInstanceTypeLimitsCommand").f(void 0, void 0).ser(se_DescribeInstanceTypeLimitsCommand).de(de_DescribeInstanceTypeLimitsCommand).build() {
};
__name(_DescribeInstanceTypeLimitsCommand, "DescribeInstanceTypeLimitsCommand");
var DescribeInstanceTypeLimitsCommand = _DescribeInstanceTypeLimitsCommand;

// src/commands/DescribeOutboundConnectionsCommand.ts



var _DescribeOutboundConnectionsCommand = class _DescribeOutboundConnectionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeOutboundConnections", {}).n("OpenSearchClient", "DescribeOutboundConnectionsCommand").f(void 0, void 0).ser(se_DescribeOutboundConnectionsCommand).de(de_DescribeOutboundConnectionsCommand).build() {
};
__name(_DescribeOutboundConnectionsCommand, "DescribeOutboundConnectionsCommand");
var DescribeOutboundConnectionsCommand = _DescribeOutboundConnectionsCommand;

// src/commands/DescribePackagesCommand.ts



var _DescribePackagesCommand = class _DescribePackagesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribePackages", {}).n("OpenSearchClient", "DescribePackagesCommand").f(void 0, void 0).ser(se_DescribePackagesCommand).de(de_DescribePackagesCommand).build() {
};
__name(_DescribePackagesCommand, "DescribePackagesCommand");
var DescribePackagesCommand = _DescribePackagesCommand;

// src/commands/DescribeReservedInstanceOfferingsCommand.ts



var _DescribeReservedInstanceOfferingsCommand = class _DescribeReservedInstanceOfferingsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeReservedInstanceOfferings", {}).n("OpenSearchClient", "DescribeReservedInstanceOfferingsCommand").f(void 0, void 0).ser(se_DescribeReservedInstanceOfferingsCommand).de(de_DescribeReservedInstanceOfferingsCommand).build() {
};
__name(_DescribeReservedInstanceOfferingsCommand, "DescribeReservedInstanceOfferingsCommand");
var DescribeReservedInstanceOfferingsCommand = _DescribeReservedInstanceOfferingsCommand;

// src/commands/DescribeReservedInstancesCommand.ts



var _DescribeReservedInstancesCommand = class _DescribeReservedInstancesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeReservedInstances", {}).n("OpenSearchClient", "DescribeReservedInstancesCommand").f(void 0, void 0).ser(se_DescribeReservedInstancesCommand).de(de_DescribeReservedInstancesCommand).build() {
};
__name(_DescribeReservedInstancesCommand, "DescribeReservedInstancesCommand");
var DescribeReservedInstancesCommand = _DescribeReservedInstancesCommand;

// src/commands/DescribeVpcEndpointsCommand.ts



var _DescribeVpcEndpointsCommand = class _DescribeVpcEndpointsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeVpcEndpoints", {}).n("OpenSearchClient", "DescribeVpcEndpointsCommand").f(void 0, void 0).ser(se_DescribeVpcEndpointsCommand).de(de_DescribeVpcEndpointsCommand).build() {
};
__name(_DescribeVpcEndpointsCommand, "DescribeVpcEndpointsCommand");
var DescribeVpcEndpointsCommand = _DescribeVpcEndpointsCommand;

// src/commands/DissociatePackageCommand.ts



var _DissociatePackageCommand = class _DissociatePackageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DissociatePackage", {}).n("OpenSearchClient", "DissociatePackageCommand").f(void 0, void 0).ser(se_DissociatePackageCommand).de(de_DissociatePackageCommand).build() {
};
__name(_DissociatePackageCommand, "DissociatePackageCommand");
var DissociatePackageCommand = _DissociatePackageCommand;

// src/commands/GetCompatibleVersionsCommand.ts



var _GetCompatibleVersionsCommand = class _GetCompatibleVersionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "GetCompatibleVersions", {}).n("OpenSearchClient", "GetCompatibleVersionsCommand").f(void 0, void 0).ser(se_GetCompatibleVersionsCommand).de(de_GetCompatibleVersionsCommand).build() {
};
__name(_GetCompatibleVersionsCommand, "GetCompatibleVersionsCommand");
var GetCompatibleVersionsCommand = _GetCompatibleVersionsCommand;

// src/commands/GetDataSourceCommand.ts



var _GetDataSourceCommand = class _GetDataSourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "GetDataSource", {}).n("OpenSearchClient", "GetDataSourceCommand").f(void 0, void 0).ser(se_GetDataSourceCommand).de(de_GetDataSourceCommand).build() {
};
__name(_GetDataSourceCommand, "GetDataSourceCommand");
var GetDataSourceCommand = _GetDataSourceCommand;

// src/commands/GetDomainMaintenanceStatusCommand.ts



var _GetDomainMaintenanceStatusCommand = class _GetDomainMaintenanceStatusCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "GetDomainMaintenanceStatus", {}).n("OpenSearchClient", "GetDomainMaintenanceStatusCommand").f(void 0, void 0).ser(se_GetDomainMaintenanceStatusCommand).de(de_GetDomainMaintenanceStatusCommand).build() {
};
__name(_GetDomainMaintenanceStatusCommand, "GetDomainMaintenanceStatusCommand");
var GetDomainMaintenanceStatusCommand = _GetDomainMaintenanceStatusCommand;

// src/commands/GetPackageVersionHistoryCommand.ts



var _GetPackageVersionHistoryCommand = class _GetPackageVersionHistoryCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "GetPackageVersionHistory", {}).n("OpenSearchClient", "GetPackageVersionHistoryCommand").f(void 0, void 0).ser(se_GetPackageVersionHistoryCommand).de(de_GetPackageVersionHistoryCommand).build() {
};
__name(_GetPackageVersionHistoryCommand, "GetPackageVersionHistoryCommand");
var GetPackageVersionHistoryCommand = _GetPackageVersionHistoryCommand;

// src/commands/GetUpgradeHistoryCommand.ts



var _GetUpgradeHistoryCommand = class _GetUpgradeHistoryCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "GetUpgradeHistory", {}).n("OpenSearchClient", "GetUpgradeHistoryCommand").f(void 0, void 0).ser(se_GetUpgradeHistoryCommand).de(de_GetUpgradeHistoryCommand).build() {
};
__name(_GetUpgradeHistoryCommand, "GetUpgradeHistoryCommand");
var GetUpgradeHistoryCommand = _GetUpgradeHistoryCommand;

// src/commands/GetUpgradeStatusCommand.ts



var _GetUpgradeStatusCommand = class _GetUpgradeStatusCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "GetUpgradeStatus", {}).n("OpenSearchClient", "GetUpgradeStatusCommand").f(void 0, void 0).ser(se_GetUpgradeStatusCommand).de(de_GetUpgradeStatusCommand).build() {
};
__name(_GetUpgradeStatusCommand, "GetUpgradeStatusCommand");
var GetUpgradeStatusCommand = _GetUpgradeStatusCommand;

// src/commands/ListDataSourcesCommand.ts



var _ListDataSourcesCommand = class _ListDataSourcesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListDataSources", {}).n("OpenSearchClient", "ListDataSourcesCommand").f(void 0, void 0).ser(se_ListDataSourcesCommand).de(de_ListDataSourcesCommand).build() {
};
__name(_ListDataSourcesCommand, "ListDataSourcesCommand");
var ListDataSourcesCommand = _ListDataSourcesCommand;

// src/commands/ListDomainMaintenancesCommand.ts



var _ListDomainMaintenancesCommand = class _ListDomainMaintenancesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListDomainMaintenances", {}).n("OpenSearchClient", "ListDomainMaintenancesCommand").f(void 0, void 0).ser(se_ListDomainMaintenancesCommand).de(de_ListDomainMaintenancesCommand).build() {
};
__name(_ListDomainMaintenancesCommand, "ListDomainMaintenancesCommand");
var ListDomainMaintenancesCommand = _ListDomainMaintenancesCommand;

// src/commands/ListDomainNamesCommand.ts



var _ListDomainNamesCommand = class _ListDomainNamesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListDomainNames", {}).n("OpenSearchClient", "ListDomainNamesCommand").f(void 0, void 0).ser(se_ListDomainNamesCommand).de(de_ListDomainNamesCommand).build() {
};
__name(_ListDomainNamesCommand, "ListDomainNamesCommand");
var ListDomainNamesCommand = _ListDomainNamesCommand;

// src/commands/ListDomainsForPackageCommand.ts



var _ListDomainsForPackageCommand = class _ListDomainsForPackageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListDomainsForPackage", {}).n("OpenSearchClient", "ListDomainsForPackageCommand").f(void 0, void 0).ser(se_ListDomainsForPackageCommand).de(de_ListDomainsForPackageCommand).build() {
};
__name(_ListDomainsForPackageCommand, "ListDomainsForPackageCommand");
var ListDomainsForPackageCommand = _ListDomainsForPackageCommand;

// src/commands/ListInstanceTypeDetailsCommand.ts



var _ListInstanceTypeDetailsCommand = class _ListInstanceTypeDetailsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListInstanceTypeDetails", {}).n("OpenSearchClient", "ListInstanceTypeDetailsCommand").f(void 0, void 0).ser(se_ListInstanceTypeDetailsCommand).de(de_ListInstanceTypeDetailsCommand).build() {
};
__name(_ListInstanceTypeDetailsCommand, "ListInstanceTypeDetailsCommand");
var ListInstanceTypeDetailsCommand = _ListInstanceTypeDetailsCommand;

// src/commands/ListPackagesForDomainCommand.ts



var _ListPackagesForDomainCommand = class _ListPackagesForDomainCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListPackagesForDomain", {}).n("OpenSearchClient", "ListPackagesForDomainCommand").f(void 0, void 0).ser(se_ListPackagesForDomainCommand).de(de_ListPackagesForDomainCommand).build() {
};
__name(_ListPackagesForDomainCommand, "ListPackagesForDomainCommand");
var ListPackagesForDomainCommand = _ListPackagesForDomainCommand;

// src/commands/ListScheduledActionsCommand.ts



var _ListScheduledActionsCommand = class _ListScheduledActionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListScheduledActions", {}).n("OpenSearchClient", "ListScheduledActionsCommand").f(void 0, void 0).ser(se_ListScheduledActionsCommand).de(de_ListScheduledActionsCommand).build() {
};
__name(_ListScheduledActionsCommand, "ListScheduledActionsCommand");
var ListScheduledActionsCommand = _ListScheduledActionsCommand;

// src/commands/ListTagsCommand.ts



var _ListTagsCommand = class _ListTagsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListTags", {}).n("OpenSearchClient", "ListTagsCommand").f(void 0, void 0).ser(se_ListTagsCommand).de(de_ListTagsCommand).build() {
};
__name(_ListTagsCommand, "ListTagsCommand");
var ListTagsCommand = _ListTagsCommand;

// src/commands/ListVersionsCommand.ts



var _ListVersionsCommand = class _ListVersionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListVersions", {}).n("OpenSearchClient", "ListVersionsCommand").f(void 0, void 0).ser(se_ListVersionsCommand).de(de_ListVersionsCommand).build() {
};
__name(_ListVersionsCommand, "ListVersionsCommand");
var ListVersionsCommand = _ListVersionsCommand;

// src/commands/ListVpcEndpointAccessCommand.ts



var _ListVpcEndpointAccessCommand = class _ListVpcEndpointAccessCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListVpcEndpointAccess", {}).n("OpenSearchClient", "ListVpcEndpointAccessCommand").f(void 0, void 0).ser(se_ListVpcEndpointAccessCommand).de(de_ListVpcEndpointAccessCommand).build() {
};
__name(_ListVpcEndpointAccessCommand, "ListVpcEndpointAccessCommand");
var ListVpcEndpointAccessCommand = _ListVpcEndpointAccessCommand;

// src/commands/ListVpcEndpointsCommand.ts



var _ListVpcEndpointsCommand = class _ListVpcEndpointsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListVpcEndpoints", {}).n("OpenSearchClient", "ListVpcEndpointsCommand").f(void 0, void 0).ser(se_ListVpcEndpointsCommand).de(de_ListVpcEndpointsCommand).build() {
};
__name(_ListVpcEndpointsCommand, "ListVpcEndpointsCommand");
var ListVpcEndpointsCommand = _ListVpcEndpointsCommand;

// src/commands/ListVpcEndpointsForDomainCommand.ts



var _ListVpcEndpointsForDomainCommand = class _ListVpcEndpointsForDomainCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListVpcEndpointsForDomain", {}).n("OpenSearchClient", "ListVpcEndpointsForDomainCommand").f(void 0, void 0).ser(se_ListVpcEndpointsForDomainCommand).de(de_ListVpcEndpointsForDomainCommand).build() {
};
__name(_ListVpcEndpointsForDomainCommand, "ListVpcEndpointsForDomainCommand");
var ListVpcEndpointsForDomainCommand = _ListVpcEndpointsForDomainCommand;

// src/commands/PurchaseReservedInstanceOfferingCommand.ts



var _PurchaseReservedInstanceOfferingCommand = class _PurchaseReservedInstanceOfferingCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "PurchaseReservedInstanceOffering", {}).n("OpenSearchClient", "PurchaseReservedInstanceOfferingCommand").f(void 0, void 0).ser(se_PurchaseReservedInstanceOfferingCommand).de(de_PurchaseReservedInstanceOfferingCommand).build() {
};
__name(_PurchaseReservedInstanceOfferingCommand, "PurchaseReservedInstanceOfferingCommand");
var PurchaseReservedInstanceOfferingCommand = _PurchaseReservedInstanceOfferingCommand;

// src/commands/RejectInboundConnectionCommand.ts



var _RejectInboundConnectionCommand = class _RejectInboundConnectionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "RejectInboundConnection", {}).n("OpenSearchClient", "RejectInboundConnectionCommand").f(void 0, void 0).ser(se_RejectInboundConnectionCommand).de(de_RejectInboundConnectionCommand).build() {
};
__name(_RejectInboundConnectionCommand, "RejectInboundConnectionCommand");
var RejectInboundConnectionCommand = _RejectInboundConnectionCommand;

// src/commands/RemoveTagsCommand.ts



var _RemoveTagsCommand = class _RemoveTagsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "RemoveTags", {}).n("OpenSearchClient", "RemoveTagsCommand").f(void 0, void 0).ser(se_RemoveTagsCommand).de(de_RemoveTagsCommand).build() {
};
__name(_RemoveTagsCommand, "RemoveTagsCommand");
var RemoveTagsCommand = _RemoveTagsCommand;

// src/commands/RevokeVpcEndpointAccessCommand.ts



var _RevokeVpcEndpointAccessCommand = class _RevokeVpcEndpointAccessCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "RevokeVpcEndpointAccess", {}).n("OpenSearchClient", "RevokeVpcEndpointAccessCommand").f(void 0, void 0).ser(se_RevokeVpcEndpointAccessCommand).de(de_RevokeVpcEndpointAccessCommand).build() {
};
__name(_RevokeVpcEndpointAccessCommand, "RevokeVpcEndpointAccessCommand");
var RevokeVpcEndpointAccessCommand = _RevokeVpcEndpointAccessCommand;

// src/commands/StartDomainMaintenanceCommand.ts



var _StartDomainMaintenanceCommand = class _StartDomainMaintenanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "StartDomainMaintenance", {}).n("OpenSearchClient", "StartDomainMaintenanceCommand").f(void 0, void 0).ser(se_StartDomainMaintenanceCommand).de(de_StartDomainMaintenanceCommand).build() {
};
__name(_StartDomainMaintenanceCommand, "StartDomainMaintenanceCommand");
var StartDomainMaintenanceCommand = _StartDomainMaintenanceCommand;

// src/commands/StartServiceSoftwareUpdateCommand.ts



var _StartServiceSoftwareUpdateCommand = class _StartServiceSoftwareUpdateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "StartServiceSoftwareUpdate", {}).n("OpenSearchClient", "StartServiceSoftwareUpdateCommand").f(void 0, void 0).ser(se_StartServiceSoftwareUpdateCommand).de(de_StartServiceSoftwareUpdateCommand).build() {
};
__name(_StartServiceSoftwareUpdateCommand, "StartServiceSoftwareUpdateCommand");
var StartServiceSoftwareUpdateCommand = _StartServiceSoftwareUpdateCommand;

// src/commands/UpdateDataSourceCommand.ts



var _UpdateDataSourceCommand = class _UpdateDataSourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "UpdateDataSource", {}).n("OpenSearchClient", "UpdateDataSourceCommand").f(void 0, void 0).ser(se_UpdateDataSourceCommand).de(de_UpdateDataSourceCommand).build() {
};
__name(_UpdateDataSourceCommand, "UpdateDataSourceCommand");
var UpdateDataSourceCommand = _UpdateDataSourceCommand;

// src/commands/UpdateDomainConfigCommand.ts



var _UpdateDomainConfigCommand = class _UpdateDomainConfigCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "UpdateDomainConfig", {}).n("OpenSearchClient", "UpdateDomainConfigCommand").f(UpdateDomainConfigRequestFilterSensitiveLog, void 0).ser(se_UpdateDomainConfigCommand).de(de_UpdateDomainConfigCommand).build() {
};
__name(_UpdateDomainConfigCommand, "UpdateDomainConfigCommand");
var UpdateDomainConfigCommand = _UpdateDomainConfigCommand;

// src/commands/UpdatePackageCommand.ts



var _UpdatePackageCommand = class _UpdatePackageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "UpdatePackage", {}).n("OpenSearchClient", "UpdatePackageCommand").f(void 0, void 0).ser(se_UpdatePackageCommand).de(de_UpdatePackageCommand).build() {
};
__name(_UpdatePackageCommand, "UpdatePackageCommand");
var UpdatePackageCommand = _UpdatePackageCommand;

// src/commands/UpdateScheduledActionCommand.ts



var _UpdateScheduledActionCommand = class _UpdateScheduledActionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "UpdateScheduledAction", {}).n("OpenSearchClient", "UpdateScheduledActionCommand").f(void 0, void 0).ser(se_UpdateScheduledActionCommand).de(de_UpdateScheduledActionCommand).build() {
};
__name(_UpdateScheduledActionCommand, "UpdateScheduledActionCommand");
var UpdateScheduledActionCommand = _UpdateScheduledActionCommand;

// src/commands/UpdateVpcEndpointCommand.ts



var _UpdateVpcEndpointCommand = class _UpdateVpcEndpointCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "UpdateVpcEndpoint", {}).n("OpenSearchClient", "UpdateVpcEndpointCommand").f(void 0, void 0).ser(se_UpdateVpcEndpointCommand).de(de_UpdateVpcEndpointCommand).build() {
};
__name(_UpdateVpcEndpointCommand, "UpdateVpcEndpointCommand");
var UpdateVpcEndpointCommand = _UpdateVpcEndpointCommand;

// src/commands/UpgradeDomainCommand.ts



var _UpgradeDomainCommand = class _UpgradeDomainCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "UpgradeDomain", {}).n("OpenSearchClient", "UpgradeDomainCommand").f(void 0, void 0).ser(se_UpgradeDomainCommand).de(de_UpgradeDomainCommand).build() {
};
__name(_UpgradeDomainCommand, "UpgradeDomainCommand");
var UpgradeDomainCommand = _UpgradeDomainCommand;

// src/OpenSearch.ts
var commands = {
  AcceptInboundConnectionCommand,
  AddDataSourceCommand,
  AddTagsCommand,
  AssociatePackageCommand,
  AuthorizeVpcEndpointAccessCommand,
  CancelDomainConfigChangeCommand,
  CancelServiceSoftwareUpdateCommand,
  CreateDomainCommand,
  CreateOutboundConnectionCommand,
  CreatePackageCommand,
  CreateVpcEndpointCommand,
  DeleteDataSourceCommand,
  DeleteDomainCommand,
  DeleteInboundConnectionCommand,
  DeleteOutboundConnectionCommand,
  DeletePackageCommand,
  DeleteVpcEndpointCommand,
  DescribeDomainCommand,
  DescribeDomainAutoTunesCommand,
  DescribeDomainChangeProgressCommand,
  DescribeDomainConfigCommand,
  DescribeDomainHealthCommand,
  DescribeDomainNodesCommand,
  DescribeDomainsCommand,
  DescribeDryRunProgressCommand,
  DescribeInboundConnectionsCommand,
  DescribeInstanceTypeLimitsCommand,
  DescribeOutboundConnectionsCommand,
  DescribePackagesCommand,
  DescribeReservedInstanceOfferingsCommand,
  DescribeReservedInstancesCommand,
  DescribeVpcEndpointsCommand,
  DissociatePackageCommand,
  GetCompatibleVersionsCommand,
  GetDataSourceCommand,
  GetDomainMaintenanceStatusCommand,
  GetPackageVersionHistoryCommand,
  GetUpgradeHistoryCommand,
  GetUpgradeStatusCommand,
  ListDataSourcesCommand,
  ListDomainMaintenancesCommand,
  ListDomainNamesCommand,
  ListDomainsForPackageCommand,
  ListInstanceTypeDetailsCommand,
  ListPackagesForDomainCommand,
  ListScheduledActionsCommand,
  ListTagsCommand,
  ListVersionsCommand,
  ListVpcEndpointAccessCommand,
  ListVpcEndpointsCommand,
  ListVpcEndpointsForDomainCommand,
  PurchaseReservedInstanceOfferingCommand,
  RejectInboundConnectionCommand,
  RemoveTagsCommand,
  RevokeVpcEndpointAccessCommand,
  StartDomainMaintenanceCommand,
  StartServiceSoftwareUpdateCommand,
  UpdateDataSourceCommand,
  UpdateDomainConfigCommand,
  UpdatePackageCommand,
  UpdateScheduledActionCommand,
  UpdateVpcEndpointCommand,
  UpgradeDomainCommand
};
var _OpenSearch = class _OpenSearch extends OpenSearchClient {
};
__name(_OpenSearch, "OpenSearch");
var OpenSearch = _OpenSearch;
(0, import_smithy_client.createAggregatedClient)(commands, OpenSearch);

// src/pagination/DescribeDomainAutoTunesPaginator.ts

var paginateDescribeDomainAutoTunes = (0, import_core.createPaginator)(OpenSearchClient, DescribeDomainAutoTunesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeInboundConnectionsPaginator.ts

var paginateDescribeInboundConnections = (0, import_core.createPaginator)(OpenSearchClient, DescribeInboundConnectionsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeOutboundConnectionsPaginator.ts

var paginateDescribeOutboundConnections = (0, import_core.createPaginator)(OpenSearchClient, DescribeOutboundConnectionsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribePackagesPaginator.ts

var paginateDescribePackages = (0, import_core.createPaginator)(OpenSearchClient, DescribePackagesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeReservedInstanceOfferingsPaginator.ts

var paginateDescribeReservedInstanceOfferings = (0, import_core.createPaginator)(OpenSearchClient, DescribeReservedInstanceOfferingsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeReservedInstancesPaginator.ts

var paginateDescribeReservedInstances = (0, import_core.createPaginator)(OpenSearchClient, DescribeReservedInstancesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/GetPackageVersionHistoryPaginator.ts

var paginateGetPackageVersionHistory = (0, import_core.createPaginator)(OpenSearchClient, GetPackageVersionHistoryCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/GetUpgradeHistoryPaginator.ts

var paginateGetUpgradeHistory = (0, import_core.createPaginator)(OpenSearchClient, GetUpgradeHistoryCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListDomainMaintenancesPaginator.ts

var paginateListDomainMaintenances = (0, import_core.createPaginator)(OpenSearchClient, ListDomainMaintenancesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListDomainsForPackagePaginator.ts

var paginateListDomainsForPackage = (0, import_core.createPaginator)(OpenSearchClient, ListDomainsForPackageCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListInstanceTypeDetailsPaginator.ts

var paginateListInstanceTypeDetails = (0, import_core.createPaginator)(OpenSearchClient, ListInstanceTypeDetailsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListPackagesForDomainPaginator.ts

var paginateListPackagesForDomain = (0, import_core.createPaginator)(OpenSearchClient, ListPackagesForDomainCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListScheduledActionsPaginator.ts

var paginateListScheduledActions = (0, import_core.createPaginator)(OpenSearchClient, ListScheduledActionsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListVersionsPaginator.ts

var paginateListVersions = (0, import_core.createPaginator)(OpenSearchClient, ListVersionsCommand, "NextToken", "NextToken", "MaxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  OpenSearchServiceException,
  __Client,
  OpenSearchClient,
  OpenSearch,
  $Command,
  AcceptInboundConnectionCommand,
  AddDataSourceCommand,
  AddTagsCommand,
  AssociatePackageCommand,
  AuthorizeVpcEndpointAccessCommand,
  CancelDomainConfigChangeCommand,
  CancelServiceSoftwareUpdateCommand,
  CreateDomainCommand,
  CreateOutboundConnectionCommand,
  CreatePackageCommand,
  CreateVpcEndpointCommand,
  DeleteDataSourceCommand,
  DeleteDomainCommand,
  DeleteInboundConnectionCommand,
  DeleteOutboundConnectionCommand,
  DeletePackageCommand,
  DeleteVpcEndpointCommand,
  DescribeDomainAutoTunesCommand,
  DescribeDomainChangeProgressCommand,
  DescribeDomainCommand,
  DescribeDomainConfigCommand,
  DescribeDomainHealthCommand,
  DescribeDomainNodesCommand,
  DescribeDomainsCommand,
  DescribeDryRunProgressCommand,
  DescribeInboundConnectionsCommand,
  DescribeInstanceTypeLimitsCommand,
  DescribeOutboundConnectionsCommand,
  DescribePackagesCommand,
  DescribeReservedInstanceOfferingsCommand,
  DescribeReservedInstancesCommand,
  DescribeVpcEndpointsCommand,
  DissociatePackageCommand,
  GetCompatibleVersionsCommand,
  GetDataSourceCommand,
  GetDomainMaintenanceStatusCommand,
  GetPackageVersionHistoryCommand,
  GetUpgradeHistoryCommand,
  GetUpgradeStatusCommand,
  ListDataSourcesCommand,
  ListDomainMaintenancesCommand,
  ListDomainNamesCommand,
  ListDomainsForPackageCommand,
  ListInstanceTypeDetailsCommand,
  ListPackagesForDomainCommand,
  ListScheduledActionsCommand,
  ListTagsCommand,
  ListVersionsCommand,
  ListVpcEndpointAccessCommand,
  ListVpcEndpointsCommand,
  ListVpcEndpointsForDomainCommand,
  PurchaseReservedInstanceOfferingCommand,
  RejectInboundConnectionCommand,
  RemoveTagsCommand,
  RevokeVpcEndpointAccessCommand,
  StartDomainMaintenanceCommand,
  StartServiceSoftwareUpdateCommand,
  UpdateDataSourceCommand,
  UpdateDomainConfigCommand,
  UpdatePackageCommand,
  UpdateScheduledActionCommand,
  UpdateVpcEndpointCommand,
  UpgradeDomainCommand,
  paginateDescribeDomainAutoTunes,
  paginateDescribeInboundConnections,
  paginateDescribeOutboundConnections,
  paginateDescribePackages,
  paginateDescribeReservedInstanceOfferings,
  paginateDescribeReservedInstances,
  paginateGetPackageVersionHistory,
  paginateGetUpgradeHistory,
  paginateListDomainMaintenances,
  paginateListDomainsForPackage,
  paginateListInstanceTypeDetails,
  paginateListPackagesForDomain,
  paginateListScheduledActions,
  paginateListVersions,
  ConnectionMode,
  InboundConnectionStatusCode,
  DisabledOperationException,
  LimitExceededException,
  ResourceNotFoundException,
  AccessDeniedException,
  OptionState,
  ActionSeverity,
  ActionStatus,
  ActionType,
  DataSourceType,
  BaseException,
  DependencyFailureException,
  InternalException,
  ValidationException,
  NaturalLanguageQueryGenerationDesiredState,
  NaturalLanguageQueryGenerationCurrentState,
  DomainPackageStatus,
  PackageType,
  ConflictException,
  PrincipalType,
  DeploymentStatus,
  AutoTuneDesiredState,
  TimeUnit,
  OpenSearchPartitionInstanceType,
  OpenSearchWarmPartitionInstanceType,
  TLSSecurityPolicy,
  VolumeType,
  IPAddressType,
  LogType,
  AutoTuneState,
  ConfigChangeStatus,
  InitiatedBy,
  DomainProcessingStatusType,
  PropertyValueType,
  InvalidTypeException,
  ResourceAlreadyExistsException,
  SkipUnavailableStatus,
  OutboundConnectionStatusCode,
  PackageStatus,
  VpcEndpointStatus,
  ScheduledAutoTuneActionType,
  ScheduledAutoTuneSeverityType,
  AutoTuneType,
  OverallChangeStatus,
  RollbackOnDisable,
  DomainHealth,
  DomainState,
  ZoneStatus,
  MasterNodeStatus,
  NodeStatus,
  NodeType,
  InvalidPaginationTokenException,
  DescribePackagesFilterName,
  ReservedInstancePaymentOption,
  VpcEndpointErrorCode,
  DataSourceStatus,
  MaintenanceType,
  MaintenanceStatus,
  UpgradeStep,
  UpgradeStatus,
  EngineType,
  ScheduledBy,
  ScheduleAt,
  DryRunMode,
  SlotNotAvailableException,
  MasterUserOptionsFilterSensitiveLog,
  SAMLOptionsInputFilterSensitiveLog,
  AdvancedSecurityOptionsInputFilterSensitiveLog,
  CreateDomainRequestFilterSensitiveLog,
  UpdateDomainConfigRequestFilterSensitiveLog
});

